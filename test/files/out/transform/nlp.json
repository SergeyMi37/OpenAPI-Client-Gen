{
  "swagger":"2.0",
  "info":{
    "version":"1.1.0",
    "title":"iKnow REST APIs",
    "description":"This is the [OpenAPI Specification](https://github.com/OAI/OpenAPI-Specification)\r\nof the iKnow REST APIs, giving you RESTful access to iKnow domain contents in your system\r\nUse [swagger-ui](https://github.com/swagger-api/swagger-ui/blob/master/README.md)\r\nor a similar tool to conveniently browse and test these APIs.\r\nFor more information on iKnow, visit [intersystems.com](http://www.intersystems.com)",
    "contact":{
      "name":"InterSystems",
      "url":"http://wrc.intersystems.com",
      "email":"support@intersystems.com"
    },
    "license":{
      "name":"Copyright InterSystems Corporation, all rights reserved.",
      "url":"http://docs.intersystems.com/latest/csp/docbook/copyright.pdf"
    }
  },
  "consumes":[
    "application/json"
  ],
  "produces":[
    "application/json"
  ],
  "parameters":{
    "domainParam":{
      "name":"domain",
      "type":"integer",
      "in":"path",
      "description":"the ID of the domain to query",
      "required":"true"
    },
    "sourceParam":{
      "name":"source",
      "type":"integer",
      "in":"path",
      "description":"the source ID to query for",
      "required":"true"
    },
    "tableParam":{
      "name":"table",
      "type":"string",
      "in":"path",
      "description":"the table containing iFind index",
      "required":"true"
    }
  },
  "definitions":{
    "PageNumber":{
      "type":"integer",
      "description":"which \"page\" of the results to retrieve",
      "default":"1"
    },
    "PageSize":{
      "type":"integer",
      "description":"how many results to retrieve per \"page\"",
      "default":"200"
    },
    "FilterMode":{
      "description":"filter mode to use for optionally recalculating certain metrics. Defaults to recalculating all and re-sorting the results (15).",
      "type":"integer",
      "default":"15",
      "example":"15",
      "enum":[
        1,
        3,
        5,
        7,
        11,
        13,
        15
      ]
    },
    "IncludeCount":{
      "description":"whether or not to include a count of all results (ignoring page and pageSize)",
      "type":"boolean",
      "default":"0",
      "format":"integer"
    },
    "CountOnly":{
      "description":"whether or not to retrieve just the count and no result list",
      "type":"boolean",
      "default":"0",
      "format":"integer"
    },
    "Skiplists":{
      "description":"array of skiplist IDs or names to use for limiting query results, OR a valid SELECT clause retrieving entity values outright",
      "type":"array",
      "default":[
      ],
      "items":{
        "type":"string"
      }
    },
    "Filter":{
      "description":"filter object restricting the sources to be considered in this query",
      "type":"object",
      "example":"{ \"operator\": \"OR\",\r\n\"filters\": [ { \"ids\": [ 123 ] },\r\n{\"field\": \"Year\", \"operator\": \">\", \"value\": 2016 } ] }",
      "properties":{
        "ids":{
          "description":"for use with source-ID-based filters",
          "type":"array",
          "items":{
            "type":"integer"
          }
        },
        "extIds":{
          "description":"for use with external-ID-based filters",
          "type":"array",
          "items":{
            "type":"string"
          }
        },
        "operator":{
          "description":"for use with group filters (\"AND\"|\"OR\") or metadata-based filters (any other value)",
          "type":"string",
          "enum":[
            "AND",
            "OR",
            "=",
            "!=",
            "<",
            ">",
            ">=",
            "<=",
            "BETWEEN",
            "IS NULL",
            "IS NOT NULL"
          ]
        },
        "field":{
          "description":"for use with metadata-based filters",
          "type":"string"
        },
        "value":{
          "description":"for use with metadata-based filters",
          "type":"string"
        },
        "negate":{
          "description":"for use with group filters",
          "type":"boolean",
          "default":"false"
        },
        "filters":{
          "description":"for use with group filters",
          "type":"array",
          "items":{
            "$ref":"#/definitions/Filter"
          }
        },
        "className":{
          "description":"use for filters not covered by other shorthands",
          "type":"string",
          "example":"%iKnow.Filters.ContainsEntityFilter"
        },
        "arguments":{
          "description":"for use with 'className' property, any arguments to be passed to the filter's %New() method (except domain ID)",
          "type":"array",
          "items":{
            "type":"string"
          }
        }
      }
    },
    "HighlightingRule":{
      "description":"\"style\" property is mandatory, then pick one selector per rule",
      "type":"object",
      "required":[
        "style"
      ],
      "properties":{
        "style":{
          "type":"string",
          "description":"style specification for this highlighting rule: either a two-character\r\nsequence or a HTML tag to use for wrapping the to-be-highlighted element.\r\nUse one selector per highlighting rule."
        },
        "entities":{
          "type":"array",
          "items":{
            "type":"string"
          },
          "description":"<i>selector</i> - selects list of entities"
        },
        "role":{
          "type":"string",
          "enum":[
            "concept",
            "relation",
            "pathRelevant",
            "nonRelevant"
          ],
          "description":"<i>selector</i> - selects all entities with this role"
        },
        "attribute":{
          "type":"string",
          "enum":[
            "negation",
            "positiveSentiment",
            "negativeSentiment"
          ],
          "description":"<i>selector</i> - selects all entities affected by this attribute"
        },
        "attributeWords":{
          "type":"string",
          "enum":[
            "negation",
            "positiveSentiment",
            "negativeSentiment"
          ],
          "description":"<i>selector</i> - selects all marker terms indicating this attribute"
        },
        "anyMatch":{
          "type":"boolean",
          "description":"<i>selector</i> - selects any dictionary match"
        },
        "dictionaries":{
          "type":"array",
          "description":"<i>selector</i> - selects any dictionary match of the specified dictionary IDs",
          "items":{
            "type":"integer"
          }
        },
        "dictionaryItems":{
          "type":"array",
          "description":"<i>selector</i> - selects any dictionary match of the specified dictionary item IDs",
          "items":{
            "type":"integer"
          }
        },
        "matchType":{
          "type":"string",
          "enum":[
            "full",
            "partial"
          ],
          "description":"refines the \"anyMatch\", \"dictionaries\" or \"dictionaryItems\" selectors to the designated match type"
        }
      }
    },
    "Highlighting":{
      "description":"array of highlighting rules",
      "example":"[ { \"style\": \"[]\", \"role\": \"concept\" },\r\n{ \"style\": \"<b>\", \"entities\": [ \"airplane\", \"pilot\" ] } ]",
      "type":"array",
      "items":{
        "$ref":"#/definitions/HighlightingRule"
      }
    },
    "DomainList":{
      "type":"object",
      "required":[
        "domains"
      ],
      "properties":{
        "domains":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/Domain"
          }
        }
      }
    },
    "DomainDetails":{
      "type":"object",
      "required":[
        "id",
        "name"
      ],
      "properties":{
        "id":{
          "type":"integer"
        },
        "name":{
          "type":"string"
        },
        "parameters":{
          "type":"object"
        },
        "metadata":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/AnonymousDef"
          }
        }
      }
    },
    "MetadataOperator":{
      "type":"string",
      "enum":[
        "=",
        "!=",
        "<",
        ">",
        ">=",
        "<=",
        "BETWEEN",
        "IS NULL",
        "IS NOT NULL"
      ]
    },
    "ConfigurationList":{
      "type":"object",
      "required":[
        "configurations"
      ],
      "properties":{
        "configurations":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/Configuration"
          }
        }
      }
    },
    "UserDictionary":{
      "type":"object",
      "required":[
        "entries"
      ],
      "properties":{
        "name":{
          "type":"string"
        },
        "entries":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/UserDictionaryEntry"
          }
        }
      }
    },
    "LanguageCode":{
      "description":"2-letter ISO language code",
      "type":"string",
      "enum":[
        "en",
        "fr",
        "de",
        "es",
        "pt",
        "nl",
        "ru",
        "uk",
        "se",
        "ja"
      ]
    },
    "SourceList":{
      "description":"list of sources",
      "type":"object",
      "required":[
        "sources"
      ],
      "properties":{
        "sources":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/Source2"
          }
        },
        "count":{
          "description":"number of result sources (ignoring page and pageSize)",
          "type":"integer"
        }
      }
    },
    "EntityList":{
      "description":"list of entities",
      "type":"object",
      "properties":{
        "entities":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/Entity"
          }
        },
        "count":{
          "type":"integer",
          "description":"number of result entities (ignoring page and pageSize)"
        }
      }
    },
    "Entity":{
      "type":"object",
      "required":[
        "id",
        "value"
      ],
      "properties":{
        "id":{
          "type":"integer",
          "description":"unique entity ID"
        },
        "value":{
          "type":"string",
          "description":"entity value"
        },
        "frequency":{
          "type":"integer",
          "description":"number of times the entity occurs in the result set"
        },
        "spread":{
          "type":"integer",
          "description":"number of distinct sources the entity occurs in in the result set"
        }
      }
    },
    "CRCList":{
      "type":"object",
      "required":[
        "crcs"
      ],
      "properties":{
        "crcs":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/CRC2"
          }
        },
        "count":{
          "type":"integer",
          "description":"number of result CRCs (ignoring page and pageSize)"
        }
      }
    },
    "CRC":{
      "type":"object",
      "required":[
        "relation"
      ],
      "properties":{
        "head":{
          "type":"string",
          "description":"entity value of the head concept"
        },
        "relation":{
          "type":"string",
          "description":"entity value of the relation"
        },
        "tail":{
          "type":"string",
          "description":"entity value of the tail concept"
        }
      }
    },
    "SkiplistList":{
      "type":"object",
      "required":[
        "skiplists"
      ],
      "properties":{
        "skiplists":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/SkiplistDetails"
          }
        }
      }
    },
    "SkiplistDetails":{
      "type":"object",
      "required":[
        "id",
        "name"
      ],
      "properties":{
        "id":{
          "type":"integer"
        },
        "name":{
          "type":"string"
        },
        "description":{
          "type":"string"
        },
        "elements":{
          "type":"array",
          "items":{
            "type":"string"
          }
        }
      }
    },
    "DictionaryList":{
      "type":"object",
      "required":[
        "dictionaries"
      ],
      "properties":{
        "dictionaries":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/DictionaryDetails"
          }
        },
        "count":{
          "type":"integer",
          "description":"total number of dictionaries (ignoring page and pageSize)"
        }
      }
    },
    "DictionaryDetails":{
      "type":"object",
      "required":[
        "id",
        "name"
      ],
      "properties":{
        "id":{
          "type":"integer"
        },
        "name":{
          "type":"string"
        },
        "language":{
          "$ref":"#/definitions/LanguageCode"
        },
        "description":{
          "type":"string"
        },
        "items":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/DictionaryItemDetails"
          }
        }
      }
    },
    "DictionaryItemDetails":{
      "type":"object",
      "required":[
        "id",
        "name",
        "uri"
      ],
      "properties":{
        "id":{
          "type":"integer"
        },
        "name":{
          "description":"display label",
          "type":"string"
        },
        "uri":{
          "description":"unique, domain-wide identifier for this Dictionary Item",
          "type":"string"
        },
        "language":{
          "$ref":"#/definitions/LanguageCode"
        },
        "terms":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/DictionaryTermDetails"
          }
        }
      }
    },
    "DictionaryTermDetails":{
      "type":"object",
      "required":[
        "id"
      ],
      "example":"{ id: 123, string: \"palm tree\" }",
      "properties":{
        "id":{
          "type":"integer"
        },
        "language":{
          "$ref":"#/definitions/LanguageCode"
        },
        "string":{
          "description":"if this is a regular term, the term string value",
          "type":"string"
        },
        "regexp":{
          "description":"if this is a regular expression format term, the regular expression",
          "type":"string"
        },
        "replace":{
          "description":"if this is a regular expression format term, the replacement string",
          "type":"string"
        },
        "formatClass":{
          "description":"if this is a format term, the name of the format implementation class",
          "type":"string"
        },
        "formatParams":{
          "description":"if this is a format term, any additional parameters for the format implementation class",
          "type":"array",
          "items":{
            "type":"string"
          }
        }
      }
    },
    "MatchList":{
      "type":"object",
      "required":[
        "matches"
      ],
      "properties":{
        "matches":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/MatchListItem"
          }
        }
      }
    },
    "MatchListItem":{
      "type":"object",
      "required":[
        "id",
        "score"
      ],
      "properties":{
        "id":{
          "type":"integer"
        },
        "score":{
          "type":"number",
          "description":"aggregated score for this match"
        },
        "partialCount":{
          "type":"integer",
          "description":"number of partially matched entities for this match"
        },
        "ordered":{
          "type":"boolean",
          "format":"integer",
          "description":"whether or not the matched entities appear in the term's order"
        },
        "negatedCount":{
          "type":"integer",
          "description":"number of entities"
        },
        "term":{
          "$ref":"#/definitions/MatchedTerm"
        },
        "target":{
          "$ref":"#/definitions/MatchTarget"
        },
        "sentenceId":{
          "type":"integer"
        },
        "sentence":{
          "type":"string",
          "description":"full text of the sentence where the match occurred"
        },
        "elements":{
          "type":"array",
          "description":"detailed overview of entity-level match results",
          "items":{
            "$ref":"#/definitions/MatchedElements"
          }
        }
      }
    },
    "SentenceDetails":{
      "type":"object",
      "required":[
        "id",
        "sourceId",
        "text"
      ],
      "properties":{
        "id":{
          "description":"sentence ID",
          "type":"integer"
        },
        "sourceId":{
          "description":"containing source ID",
          "type":"integer"
        },
        "text":{
          "description":"sentence text, optionally highlighted",
          "type":"string"
        },
        "parts":{
          "description":"entities in this sentence",
          "type":"array",
          "items":{
            "$ref":"#/definitions/SentencePart"
          }
        }
      }
    },
    "HighlightSpec":{
      "description":"The parameters needed for %iFind.Utils.Highlight",
      "type":"object",
      "example":"{ \"tag\": \"<b>\", \"limit\":0, \"name\": \"Highlighted\"}",
      "properties":{
        "tag":{
          "description":"the tags used to enclose the highlighted segments",
          "type":"string",
          "default":"<b>"
        },
        "limit":{
          "description":"limit the segments get highlighted,check %iFind.Utils.Highlight() for details",
          "type":"integer",
          "default":"0"
        },
        "name":{
          "description":"the alias name for the column containing highlighted text",
          "type":"string",
          "default":"Highlighted"
        }
      }
    },
    "RankSpec":{
      "description":"The parameters needed for %iFind.Utils.Rank",
      "type":"object",
      "example":"{ \"name\":\"Rank\" }",
      "properties":{
        "name":{
          "description":"the alias name for the column containing rank info",
          "type":"string",
          "default":"Rank"
        }
      }
    },
    "OptionSpec":{
      "description":"The option could be object which includes all the required parameters. However, you could still use \"0\",\"1\",\"2\",\"3\",\"4\" these simple strings for option for the legacy support",
      "type":"object",
      "properties":{
        "mode":{
          "type":"string",
          "enum":[
            "0",
            "1",
            "2",
            "3",
            "4",
            "*",
            "normal",
            "stemmed",
            "decompounded",
            "fuzzy",
            "regex"
          ],
          "description":"the iFind search options. 0/normal search,1/stemmed search,2/decompunded search,3/fuzzy search,4/regex search, \"*\" indicates use the index setting"
        },
        "stemmer":{
          "type":"string",
          "description":"the stemming/decompounding class"
        },
        "arguments":{
          "type":"array",
          "description":"the arguments needed for initialize a stemming/decompounding class",
          "items":{
            "type":"string"
          }
        },
        "distance":{
          "type":"string",
          "description":"the fuzzy search threshold."
        }
      }
    },
    "EntityList2":{
      "title":"EntityList",
      "type":"object",
      "properties":{
        "entities":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/Entity2"
          }
        }
      }
    },
    "EntityList3":{
      "title":"EntityList",
      "type":"object",
      "properties":{
        "entities":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/Entity2"
          }
        },
        "count":{
          "type":"integer",
          "description":"total number of entities in this domain (if RequestBody.includeCount is true, ignoring page and pageSize)"
        }
      }
    },
    "RequestBody":{
      "type":"object",
      "properties":{
        "page":{
          "$ref":"#/definitions/PageNumber"
        },
        "pageSize":{
          "$ref":"#/definitions/PageSize"
        },
        "filter":{
          "$ref":"#/definitions/Filter"
        },
        "filterMode":{
          "$ref":"#/definitions/FilterMode"
        },
        "skiplists":{
          "$ref":"#/definitions/Skiplists"
        },
        "sortBy":{
          "description":"criterion to use for retrieving the top entities",
          "type":"string",
          "default":"domainDefault",
          "example":"domainDefault",
          "enum":[
            "frequency",
            "spread",
            "domainDefault",
            "dominance",
            "bm25",
            "tfidf"
          ]
        },
        "useStems":{
          "description":"retrieve stems rather than entities. (only available when the domain has stemming enabled and for certain sortBy values)",
          "type":"integer",
          "default":"0",
          "format":"integer"
        },
        "role":{
          "description":"whether to retrieve top concepts, relationships or both (only available for certain sortBy values)",
          "type":"string",
          "default":"concept",
          "enum":[
            "concept",
            "relation",
            "any"
          ]
        },
        "includeMetrics":{
          "description":"additional metrics to retrieve, on top of what is automatically retrieved based on the sortBy value",
          "type":"array",
          "default":[
          ],
          "items":{
            "type":"string",
            "enum":[
              "frequency",
              "spread",
              "dominance",
              "tfidf"
            ]
          }
        },
        "includeCount":{
          "$ref":"#/definitions/IncludeCount"
        },
        "countOnly":{
          "$ref":"#/definitions/CountOnly"
        }
      }
    },
    "RequestBody2":{
      "type":"object",
      "properties":{
        "string":{
          "description":"if set, overrides value of path parameter",
          "type":"string",
          "default":{
          },
          "example":{
          }
        },
        "page":{
          "$ref":"#/definitions/PageNumber"
        },
        "pageSize":{
          "$ref":"#/definitions/PageSize"
        },
        "filter":{
          "$ref":"#/definitions/Filter"
        },
        "filterMode":{
          "$ref":"#/definitions/FilterMode"
        },
        "skiplists":{
          "$ref":"#/definitions/Skiplists"
        },
        "type":{
          "description":"method to calculate / retrieve similar entities. (\"ngrams\" requires the domain to be configured for it)",
          "type":"string",
          "default":"domainDefault",
          "example":"domainDefault",
          "enum":[
            "domainDefault",
            "parts",
            "ngrams",
            "words"
          ]
        },
        "useStems":{
          "description":"retrieve stems rather than entities. (only available when the domain has stemming enabled and for certain sortBy values)",
          "type":"boolean",
          "default":"0",
          "format":"integer"
        },
        "role":{
          "description":"whether to retrieve top concepts, relationships or both (only available for certain sortBy values)",
          "type":"string",
          "default":"any",
          "example":"any",
          "enum":[
            "concept",
            "relation",
            "any"
          ]
        },
        "includeCount":{
          "$ref":"#/definitions/IncludeCount"
        },
        "countOnly":{
          "$ref":"#/definitions/CountOnly"
        }
      }
    },
    "RequestBody3":{
      "type":"object",
      "required":[
        "string"
      ],
      "properties":{
        "string":{
          "description":"the seed string to find similar entities for",
          "type":"string",
          "example":"tree"
        },
        "page":{
          "$ref":"#/definitions/PageNumber"
        },
        "pageSize":{
          "$ref":"#/definitions/PageSize"
        },
        "filter":{
          "$ref":"#/definitions/Filter"
        },
        "filterMode":{
          "$ref":"#/definitions/FilterMode"
        },
        "skiplists":{
          "$ref":"#/definitions/Skiplists"
        },
        "type":{
          "description":"method to calculate / retrieve similar entities. (\"ngrams\" requires the domain to be configured for it)",
          "type":"string",
          "default":"domainDefault",
          "example":"domainDefault",
          "enum":[
            "domainDefault",
            "parts",
            "ngrams",
            "words"
          ]
        },
        "useStems":{
          "description":"retrieve stems rather than entities. (only available when the domain has stemming enabled and for certain sortBy values)",
          "type":"boolean",
          "default":"0",
          "format":"integer"
        },
        "role":{
          "description":"whether to retrieve top concepts, relationships or both (only available for certain sortBy values)",
          "type":"string",
          "default":"any",
          "example":"any",
          "enum":[
            "concept",
            "relation",
            "any"
          ]
        },
        "includeCount":{
          "$ref":"#/definitions/IncludeCount"
        },
        "countOnly":{
          "$ref":"#/definitions/CountOnly"
        }
      }
    },
    "RequestBody4":{
      "type":"object",
      "properties":{
        "entity":{
          "description":"if set, overrides value of path parameter",
          "type":"string",
          "default":{
          },
          "example":{
          }
        },
        "page":{
          "$ref":"#/definitions/PageNumber"
        },
        "pageSize":{
          "$ref":"#/definitions/PageSize"
        },
        "filter":{
          "$ref":"#/definitions/Filter"
        },
        "filterMode":{
          "$ref":"#/definitions/FilterMode"
        },
        "skiplists":{
          "$ref":"#/definitions/Skiplists"
        },
        "sortBy":{
          "description":"criterion to use for retrieving the related entities",
          "type":"string",
          "default":"proximity",
          "example":"proximity",
          "enum":[
            "proximity",
            "frequency",
            "spread"
          ]
        },
        "includeCount":{
          "$ref":"#/definitions/IncludeCount"
        },
        "countOnly":{
          "$ref":"#/definitions/CountOnly"
        }
      }
    },
    "RequestBody5":{
      "type":"object",
      "properties":{
        "entity":{
          "description":"the seed entity to find related ones for",
          "type":"string",
          "default":{
          },
          "example":"tree"
        },
        "page":{
          "$ref":"#/definitions/PageNumber"
        },
        "pageSize":{
          "$ref":"#/definitions/PageSize"
        },
        "filter":{
          "$ref":"#/definitions/Filter"
        },
        "filterMode":{
          "$ref":"#/definitions/FilterMode"
        },
        "skiplists":{
          "$ref":"#/definitions/Skiplists"
        },
        "sortBy":{
          "description":"criterion to use for retrieving the related entities",
          "type":"string",
          "default":"proximity",
          "example":"proximity",
          "enum":[
            "proximity",
            "frequency",
            "spread"
          ]
        },
        "includeCount":{
          "$ref":"#/definitions/IncludeCount"
        },
        "countOnly":{
          "$ref":"#/definitions/CountOnly"
        }
      }
    },
    "EntityDetails":{
      "title":"EntityDetails",
      "type":"object",
      "required":[
        "id",
        "value"
      ],
      "properties":{
        "id":{
          "type":"integer",
          "description":"unique entity ID"
        },
        "value":{
          "type":"string",
          "description":"entity value"
        },
        "metricsAsConcept":{
          "$ref":"#/definitions/metricsAsConceptAnonymous"
        },
        "metricsAsRelation":{
          "$ref":"#/definitions/metricsAsRelationAnonymous"
        },
        "metricsAsAny":{
          "$ref":"#/definitions/metricsAsAnyAnonymous"
        }
      }
    },
    "RequestBody6":{
      "type":"object",
      "properties":{
        "entity":{
          "description":"if set, overrides the value of the path parameter",
          "type":"string",
          "default":{
          }
        },
        "filter":{
          "description":"if set, restricts the dataset on which metrics should be based",
          "$ref":"#/definitions/Filter"
        },
        "useStems":{
          "description":"only available when the domain has stemming enabled",
          "type":"boolean",
          "default":"0",
          "format":"integer"
        },
        "roles":{
          "description":"roles for which the metrics need to be retrieved",
          "type":"array",
          "default":[
            "concept",
            "relation",
            "any"
          ],
          "example":[
            "concept",
            "relation",
            "any"
          ],
          "items":{
            "type":"string",
            "enum":[
              "concept",
              "relation",
              "any"
            ]
          }
        },
        "includeMetrics":{
          "description":"metrics to retrieve",
          "type":"array",
          "default":[
            "frequency",
            "spread",
            "tfidf"
          ],
          "example":[
            "frequency",
            "spread",
            "tfidf"
          ],
          "items":{
            "type":"string",
            "enum":[
              "frequency",
              "spread",
              "tfidf"
            ]
          }
        }
      }
    },
    "RequestBody7":{
      "type":"object",
      "required":[
        "entity"
      ],
      "properties":{
        "entity":{
          "description":"if set, overrides the value of the path parameter",
          "type":"string",
          "default":{
          }
        },
        "filter":{
          "description":"if set, restricts the dataset on which metrics should be based",
          "$ref":"#/definitions/Filter"
        },
        "useStems":{
          "description":"only available when the domain has stemming enabled",
          "type":"boolean",
          "default":"0",
          "format":"integer"
        },
        "roles":{
          "description":"roles for which the metrics need to be retrieved",
          "type":"array",
          "default":[
            "concept",
            "relation",
            "any"
          ],
          "example":[
            "concept",
            "relation",
            "any"
          ],
          "items":{
            "type":"string",
            "enum":[
              "concept",
              "relation",
              "any"
            ]
          }
        },
        "includeMetrics":{
          "description":"metrics to retrieve",
          "type":"array",
          "default":[
            "frequency",
            "spread",
            "tfidf"
          ],
          "example":[
            "frequency",
            "spread",
            "tfidf"
          ],
          "items":{
            "type":"string",
            "enum":[
              "frequency",
              "spread",
              "tfidf"
            ]
          }
        }
      }
    },
    "RequestBody8":{
      "type":"object",
      "properties":{
        "page":{
          "$ref":"#/definitions/PageNumber"
        },
        "pageSize":{
          "$ref":"#/definitions/PageSize"
        },
        "filter":{
          "$ref":"#/definitions/Filter"
        },
        "highlight":{
          "$ref":"#/definitions/Highlighting"
        },
        "includeMetadata":{
          "description":"whether or not to include metadata for each retrieved source",
          "type":"boolean",
          "default":"1",
          "format":"integer"
        },
        "includeSnippets":{
          "description":"if set to a nonzero value, a snippet of the designated length (in sentences) will be retrieved for each source",
          "type":"integer",
          "default":"2"
        },
        "includeCount":{
          "$ref":"#/definitions/IncludeCount"
        },
        "countOnly":{
          "$ref":"#/definitions/CountOnly"
        }
      }
    },
    "RequestBody9":{
      "type":"object",
      "properties":{
        "entity":{
          "type":"array",
          "items":{
            "type":"string"
          },
          "description":"if supplied, overwrites the value of the \"entity\" path parameter",
          "default":{
          }
        },
        "page":{
          "$ref":"#/definitions/PageNumber"
        },
        "pageSize":{
          "$ref":"#/definitions/PageSize"
        },
        "filter":{
          "$ref":"#/definitions/Filter"
        },
        "highlight":{
          "$ref":"#/definitions/Highlighting"
        },
        "includeMetadata":{
          "description":"whether or not to include metadata for each retrieved source",
          "type":"boolean",
          "default":"1",
          "format":"integer"
        },
        "includeSnippets":{
          "description":"if set to true, a snippet made up of all sentences containing the designated entities will be retrieved for each source",
          "type":"boolean",
          "default":"1",
          "format":"integer"
        },
        "actualFormOnly":{
          "type":"boolean",
          "format":"integer",
          "description":"when this domain supports stemming, set to true to restrict to the supplied actual form only",
          "default":"0"
        },
        "setOperation":{
          "type":"string",
          "enum":[
            "union",
            "intersect"
          ],
          "description":"when supplying multiple entities, controls how the results for each entity should be combined"
        },
        "includeCount":{
          "$ref":"#/definitions/IncludeCount"
        },
        "countOnly":{
          "$ref":"#/definitions/CountOnly"
        }
      }
    },
    "RequestBody10":{
      "type":"object",
      "required":[
        "entity"
      ],
      "properties":{
        "entity":{
          "type":"array",
          "items":{
            "type":"string"
          },
          "description":"the entity or list of entities to query for",
          "default":"tree house"
        },
        "page":{
          "$ref":"#/definitions/PageNumber"
        },
        "pageSize":{
          "$ref":"#/definitions/PageSize"
        },
        "filter":{
          "$ref":"#/definitions/Filter"
        },
        "highlight":{
          "$ref":"#/definitions/Highlighting"
        },
        "includeMetadata":{
          "description":"whether or not to include metadata for each retrieved source",
          "type":"boolean",
          "default":"1",
          "format":"integer"
        },
        "includeSnippets":{
          "description":"if set to true, a snippet made up of all sentences containing the designated entities will be retrieved for each source",
          "type":"boolean",
          "default":"1",
          "format":"integer"
        },
        "actualFormOnly":{
          "type":"boolean",
          "format":"integer",
          "description":"when this domain supports stemming, set to true to restrict to the supplied actual form only",
          "default":"0"
        },
        "setOperation":{
          "type":"string",
          "enum":[
            "union",
            "intersect"
          ],
          "description":"when supplying multiple entities, controls how the results for each entity should be combined"
        },
        "includeCount":{
          "$ref":"#/definitions/IncludeCount"
        },
        "countOnly":{
          "$ref":"#/definitions/CountOnly"
        }
      }
    },
    "RequestBody11":{
      "type":"object",
      "properties":{
        "crc":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/CRC"
          },
          "description":"if supplied, overwrites the value of the \"crc\" path parameter",
          "default":{
          }
        },
        "page":{
          "$ref":"#/definitions/PageNumber"
        },
        "pageSize":{
          "$ref":"#/definitions/PageSize"
        },
        "filter":{
          "$ref":"#/definitions/Filter"
        },
        "highlight":{
          "$ref":"#/definitions/Highlighting"
        },
        "includeMetadata":{
          "description":"whether or not to include metadata for each retrieved source",
          "type":"boolean",
          "default":"1",
          "format":"integer"
        },
        "includeSnippets":{
          "description":"if set to true, a snippet made up of all the sentences containing the designated CRCs will be retrieved for each source",
          "type":"boolean",
          "default":"1",
          "format":"integer"
        },
        "setOperation":{
          "type":"string",
          "enum":[
            "union",
            "intersect"
          ],
          "description":"when supplying multiple entities, controls how the results for each entity should be combined"
        },
        "includeCount":{
          "$ref":"#/definitions/IncludeCount"
        },
        "countOnly":{
          "$ref":"#/definitions/CountOnly"
        }
      }
    },
    "RequestBody12":{
      "type":"object",
      "required":[
        "crc"
      ],
      "properties":{
        "crc":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/CRC"
          },
          "description":"the CRC to look for"
        },
        "page":{
          "$ref":"#/definitions/PageNumber"
        },
        "pageSize":{
          "$ref":"#/definitions/PageSize"
        },
        "filter":{
          "$ref":"#/definitions/Filter"
        },
        "highlight":{
          "$ref":"#/definitions/Highlighting"
        },
        "includeMetadata":{
          "description":"whether or not to include metadata for each retrieved source",
          "type":"boolean",
          "default":"1",
          "format":"integer"
        },
        "includeSnippets":{
          "description":"if set to true, a snippet made up of all the sentences containing the designated CRCs will be retrieved for each source",
          "type":"boolean",
          "default":"1",
          "format":"integer"
        },
        "setOperation":{
          "type":"string",
          "enum":[
            "union",
            "intersect"
          ],
          "description":"when supplying multiple entities, controls how the results for each entity should be combined"
        },
        "includeCount":{
          "$ref":"#/definitions/IncludeCount"
        },
        "countOnly":{
          "$ref":"#/definitions/CountOnly"
        }
      }
    },
    "R200":{
      "allOf":[
        {
          "$ref":"#/definitions/SourceList"
        },
        {
          "type":"object",
          "properties":{
            "score":{
              "type":"number",
              "description":"score expressing the similarity between this record and the seed document"
            },
            "percentageMatched":{
              "type":"number"
            },
            "percentageNew":{
              "type":"number"
            },
            "numberOfEntitiesInRefSource":{
              "type":"integer"
            },
            "numberOfEntitiesInCommon":{
              "type":"integer"
            },
            "numberOfEntitiesInThisSource":{
              "type":"integer"
            }
          }
        }
      ]
    },
    "RequestBody13":{
      "type":"object",
      "properties":{
        "page":{
          "$ref":"#/definitions/PageNumber"
        },
        "pageSize":{
          "$ref":"#/definitions/PageSize"
        },
        "filter":{
          "$ref":"#/definitions/Filter"
        },
        "highlight":{
          "$ref":"#/definitions/Highlighting"
        },
        "algorithm":{
          "type":"string",
          "enum":[
            "simple",
            "dominantEntities"
          ],
          "description":"algorithm to use for calculating similar entities",
          "default":"simple"
        },
        "parameters":{
          "type":"array",
          "items":{
            "type":"string"
          },
          "description":"additional parameters to tune the algorithm",
          "default":[
          ]
        },
        "includeMetadata":{
          "description":"whether or not to include metadata for each retrieved source",
          "type":"boolean",
          "default":"1",
          "format":"integer"
        },
        "includeSnippets":{
          "description":"if set to a nonzero value, a snippet of the designated length (in sentences) will be retrieved for each source",
          "type":"integer",
          "default":"2"
        }
      }
    },
    "Source":{
      "title":"Source",
      "type":"object",
      "properties":{
        "text":{
          "type":"string",
          "description":"textual contents (optionally summarized) of this source"
        },
        "metadata":{
          "type":"object",
          "description":"metadata map for this source"
        },
        "virtual":{
          "type":"boolean",
          "format":"integer",
          "description":"whether or not this is a virtual source"
        }
      }
    },
    "RequestBody14":{
      "type":"object",
      "properties":{
        "includeMetadata":{
          "description":"whether or not to include metadata for the designated source",
          "type":"boolean",
          "default":"1",
          "format":"integer"
        },
        "includeText":{
          "description":"whether or not to include the full source text in the result",
          "type":"boolean",
          "default":"1",
          "format":"integer"
        },
        "summarize":{
          "description":"if set, the text returned will be a summary of the full contents, measuring this many sentences",
          "type":"number"
        },
        "virtual":{
          "description":"if set to true, the source ID will be considered to refer to a virtual source",
          "type":"boolean",
          "default":"0",
          "format":"integer"
        },
        "highlight":{
          "$ref":"#/definitions/Highlighting"
        }
      }
    },
    "R2002":{
      "type":"object",
      "required":[
        "id"
      ],
      "properties":{
        "id":{
          "description":"source ID of the newly created record",
          "type":"integer"
        }
      }
    },
    "RequestBody15":{
      "type":"object",
      "required":[
        "reference",
        "text"
      ],
      "properties":{
        "reference":{
          "description":"a string to be used for building the new record's external ID",
          "type":"string"
        },
        "text":{
          "description":"the text to index",
          "type":"string"
        },
        "configuration":{
          "description":"name of a valid configuration object to use or the two-letter ISO code for the language to use (if no such configuration exists)",
          "type":"string",
          "example":"en"
        },
        "virtual":{
          "description":"if true, the source will be added as a virtual one",
          "type":"boolean",
          "default":"0",
          "format":"integer"
        },
        "metadata":{
          "description":"map of metadata field values to set for the document",
          "type":"object"
        }
      }
    },
    "R2003":{
      "type":"object",
      "required":[
        "deleted"
      ],
      "properties":{
        "deleted":{
          "type":"boolean",
          "format":"integer"
        }
      }
    },
    "RequestBody16":{
      "type":"object",
      "properties":{
        "virtual":{
          "description":"if set, the supplied source ID will be used to look up a virtual source",
          "type":"boolean",
          "format":"integer",
          "default":"0"
        }
      }
    },
    "R2004":{
      "type":"object",
      "required":[
        "updated"
      ],
      "properties":{
        "updated":{
          "type":"boolean",
          "format":"integer"
        }
      }
    },
    "RequestBody17":{
      "type":"object",
      "properties":{
        "metadata":{
          "description":"map of metadata field values to set for this source",
          "type":"object"
        }
      }
    },
    "SentenceList":{
      "title":"SentenceList",
      "type":"object",
      "required":[
        "sentences"
      ],
      "properties":{
        "sentences":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/SentenceDetails"
          }
        }
      }
    },
    "SentenceList2":{
      "title":"SentenceList",
      "type":"object",
      "required":[
        "sentences"
      ],
      "properties":{
        "sentences":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/SentenceDetails"
          }
        },
        "count":{
          "description":"total number of paths, ignoring page and pageSize (if RequestBody.includeCount is set)",
          "type":"integer"
        }
      }
    },
    "RequestBody18":{
      "type":"object",
      "properties":{
        "entity":{
          "description":"if set, takes precedence over the corresponding path parameter",
          "type":"array",
          "items":{
            "type":"string"
          },
          "default":{
          }
        },
        "page":{
          "$ref":"#/definitions/PageNumber"
        },
        "pageSize":{
          "$ref":"#/definitions/PageSize"
        },
        "filter":{
          "$ref":"#/definitions/Filter"
        },
        "highlight":{
          "$ref":"#/definitions/Highlighting"
        },
        "includeDetails":{
          "description":"whether or not to include details on the entities for each sentence",
          "type":"boolean",
          "default":"1",
          "format":"integer"
        },
        "actualFormOnly":{
          "type":"boolean",
          "format":"integer",
          "description":"when this domain supports stemming, set to true to restrict to the supplied actual form only",
          "default":"0"
        },
        "setOperation":{
          "type":"string",
          "enum":[
            "union",
            "intersect"
          ],
          "description":"when supplying multiple entities, controls how the results for each entity should be combined"
        },
        "includeCount":{
          "$ref":"#/definitions/IncludeCount"
        },
        "countOnly":{
          "$ref":"#/definitions/CountOnly"
        }
      }
    },
    "RequestBody19":{
      "type":"object",
      "required":[
        "entity"
      ],
      "properties":{
        "entity":{
          "description":"if set, takes precedence over the corresponding path parameter",
          "type":"array",
          "items":{
            "type":"string"
          },
          "default":{
          },
          "example":"palm tree"
        },
        "page":{
          "$ref":"#/definitions/PageNumber"
        },
        "pageSize":{
          "$ref":"#/definitions/PageSize"
        },
        "filter":{
          "$ref":"#/definitions/Filter"
        },
        "highlight":{
          "$ref":"#/definitions/Highlighting"
        },
        "includeDetails":{
          "description":"whether or not to include details on the entities for each sentence",
          "type":"boolean",
          "default":"1",
          "format":"integer"
        },
        "actualFormOnly":{
          "type":"boolean",
          "format":"integer",
          "description":"when this domain supports stemming, set to true to restrict to the supplied actual form only",
          "default":"0"
        },
        "setOperation":{
          "type":"string",
          "enum":[
            "union",
            "intersect"
          ],
          "description":"when supplying multiple entities, controls how the results for each entity should be combined"
        },
        "includeCount":{
          "$ref":"#/definitions/IncludeCount"
        },
        "countOnly":{
          "$ref":"#/definitions/CountOnly"
        }
      }
    },
    "RequestBody20":{
      "type":"object",
      "properties":{
        "highlight":{
          "$ref":"#/definitions/Highlighting"
        },
        "virtualSourceId":{
          "description":"if set, the sentence will be looked up in the context of this virtual source",
          "type":"integer"
        }
      }
    },
    "RequestBody21":{
      "type":"object",
      "properties":{
        "page":{
          "$ref":"#/definitions/PageNumber"
        },
        "pageSize":{
          "$ref":"#/definitions/PageSize"
        },
        "filter":{
          "$ref":"#/definitions/Filter"
        },
        "filterMode":{
          "$ref":"#/definitions/FilterMode"
        },
        "sortBy":{
          "description":"criterion to use for retrieving the top entities",
          "type":"string",
          "default":"domainDefault",
          "example":"domainDefault",
          "enum":[
            "frequency",
            "spread",
            "domainDefault"
          ]
        },
        "includeCount":{
          "$ref":"#/definitions/IncludeCount"
        },
        "countOnly":{
          "$ref":"#/definitions/CountOnly"
        }
      }
    },
    "RequestBody22":{
      "type":"object",
      "properties":{
        "entity":{
          "description":"if set, takes precedence over the path parameter",
          "type":"array",
          "items":{
            "type":"string"
          },
          "default":{
          }
        },
        "page":{
          "$ref":"#/definitions/PageNumber"
        },
        "pageSize":{
          "$ref":"#/definitions/PageSize"
        },
        "filter":{
          "$ref":"#/definitions/Filter"
        },
        "filterMode":{
          "$ref":"#/definitions/FilterMode"
        },
        "positions":{
          "description":"CRC positions to query",
          "type":"array",
          "default":[
            "head",
            "relation",
            "tail"
          ],
          "example":[
            "head",
            "relation",
            "tail"
          ],
          "items":{
            "type":"string",
            "enum":[
              "head",
              "relation",
              "tail"
            ]
          }
        },
        "actualFormOnly":{
          "type":"boolean",
          "format":"integer",
          "description":"when this domain supports stemming, set to true to restrict to the supplied actual form only",
          "default":"0"
        },
        "includeCount":{
          "$ref":"#/definitions/IncludeCount"
        },
        "countOnly":{
          "$ref":"#/definitions/CountOnly"
        }
      }
    },
    "RequestBody23":{
      "type":"object",
      "required":[
        "entity"
      ],
      "properties":{
        "entity":{
          "description":"seed entity or list of entities to query for",
          "type":"array",
          "items":{
            "type":"string"
          },
          "default":{
          },
          "example":"tree"
        },
        "page":{
          "$ref":"#/definitions/PageNumber"
        },
        "pageSize":{
          "$ref":"#/definitions/PageSize"
        },
        "filter":{
          "$ref":"#/definitions/Filter"
        },
        "filterMode":{
          "$ref":"#/definitions/FilterMode"
        },
        "positions":{
          "description":"CRC positions to query",
          "type":"array",
          "default":[
            "head",
            "relation",
            "tail"
          ],
          "example":[
            "head",
            "relation",
            "tail"
          ],
          "items":{
            "type":"string",
            "enum":[
              "head",
              "relation",
              "tail"
            ]
          }
        },
        "actualFormOnly":{
          "type":"boolean",
          "format":"integer",
          "description":"when this domain supports stemming, set to true to restrict to the supplied actual form only",
          "default":"0"
        },
        "includeCount":{
          "$ref":"#/definitions/IncludeCount"
        },
        "countOnly":{
          "$ref":"#/definitions/CountOnly"
        }
      }
    },
    "PathList":{
      "title":"PathList",
      "type":"object",
      "properties":{
        "paths":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/Path"
          }
        }
      }
    },
    "PathList2":{
      "title":"PathList",
      "type":"object",
      "properties":{
        "paths":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/Path"
          }
        },
        "count":{
          "description":"total number of paths, ignoring page and pageSize",
          "type":"integer"
        }
      }
    },
    "RequestBody24":{
      "type":"object",
      "properties":{
        "entity":{
          "description":"if set, takes precedence over the path parameter",
          "type":"array",
          "items":{
            "type":"string"
          },
          "default":{
          }
        },
        "page":{
          "$ref":"#/definitions/PageNumber"
        },
        "pageSize":{
          "$ref":"#/definitions/PageSize"
        },
        "filter":{
          "$ref":"#/definitions/Filter"
        },
        "includeDetails":{
          "description":"whether or not to include details on the entities for each path",
          "type":"boolean",
          "default":"1",
          "format":"integer"
        },
        "actualFormOnly":{
          "type":"boolean",
          "format":"integer",
          "description":"when this domain supports stemming, set to true to restrict to the supplied actual form only",
          "default":"0"
        },
        "setOperation":{
          "type":"string",
          "enum":[
            "union",
            "intersect"
          ],
          "description":"when supplying multiple entities, controls how the results for each entity should be combined"
        },
        "includeCount":{
          "$ref":"#/definitions/IncludeCount"
        },
        "countOnly":{
          "$ref":"#/definitions/CountOnly"
        }
      }
    },
    "RequestBody25":{
      "type":"object",
      "required":[
        "entity"
      ],
      "properties":{
        "entity":{
          "description":"seed entity or list of entities to query paths for",
          "type":"array",
          "items":{
            "type":"string"
          },
          "default":{
          },
          "example":"tree"
        },
        "page":{
          "$ref":"#/definitions/PageNumber"
        },
        "pageSize":{
          "$ref":"#/definitions/PageSize"
        },
        "filter":{
          "$ref":"#/definitions/Filter"
        },
        "includeDetails":{
          "description":"whether or not to include details on the entities for each path",
          "type":"boolean",
          "default":"1",
          "format":"integer"
        },
        "actualFormOnly":{
          "type":"boolean",
          "format":"integer",
          "description":"when this domain supports stemming, set to true to restrict to the supplied actual form only",
          "default":"0"
        },
        "setOperation":{
          "type":"string",
          "enum":[
            "union",
            "intersect"
          ],
          "description":"when supplying multiple entities, controls how the results for each entity should be combined"
        },
        "includeCount":{
          "$ref":"#/definitions/IncludeCount"
        },
        "countOnly":{
          "$ref":"#/definitions/CountOnly"
        }
      }
    },
    "RequestBody26":{
      "type":"object",
      "properties":{
        "includeDetails":{
          "description":"whether or not to retrieve skiplists' contents as well",
          "type":"boolean",
          "format":"integer"
        },
        "includeCrossDomain":{
          "description":"whether or not to include cross-domain skiplists",
          "type":"boolean",
          "format":"integer"
        }
      }
    },
    "RequestBody27":{
      "type":"object",
      "properties":{
        "name":{
          "description":"overrides what's passed in through the path parameter if set",
          "type":"string"
        },
        "description":{
          "type":"string"
        },
        "elements":{
          "type":"array",
          "example":[
          ],
          "items":{
            "type":"string"
          }
        }
      }
    },
    "RequestBody28":{
      "type":"object",
      "required":[
        "name"
      ],
      "properties":{
        "name":{
          "description":"name for the new skiplist",
          "type":"string"
        },
        "description":{
          "type":"string"
        },
        "elements":{
          "type":"array",
          "example":[
          ],
          "items":{
            "type":"string"
          }
        }
      }
    },
    "R2005":{
      "type":"object",
      "properties":{
        "dropped":{
          "type":"boolean",
          "format":"integer"
        }
      }
    },
    "R2006":{
      "type":"object",
      "properties":{
        "cleared":{
          "type":"boolean",
          "format":"integer"
        }
      }
    },
    "R2007":{
      "type":"object",
      "properties":{
        "added":{
          "description":"number of elements added",
          "type":"integer"
        }
      }
    },
    "RequestBody29":{
      "type":"object",
      "properties":{
        "elements":{
          "description":"if set, overrides what's passed in through the path parameter",
          "type":"array",
          "example":[
          ],
          "items":{
            "type":"string"
          }
        }
      }
    },
    "RequestBody30":{
      "type":"object",
      "required":[
        "elements"
      ],
      "properties":{
        "elements":{
          "description":"array of entries to add to the skiplist",
          "type":"array",
          "example":[
          ],
          "items":{
            "type":"string"
          }
        }
      }
    },
    "R2008":{
      "type":"object",
      "properties":{
        "removed":{
          "description":"number of elements removed",
          "type":"integer"
        }
      }
    },
    "RequestBody31":{
      "type":"object",
      "required":[
        "elements"
      ],
      "properties":{
        "elements":{
          "description":"element or list of elements to remove from the skiplist",
          "type":"array",
          "example":[
            "palm tree"
          ],
          "items":{
            "type":"string"
          }
        }
      }
    },
    "RequestBody32":{
      "type":"object",
      "properties":{
        "includeItems":{
          "description":"whether or not to include item and term details as well",
          "type":"boolean",
          "format":"integer"
        },
        "includeCount":{
          "$ref":"#/definitions/IncludeCount"
        },
        "countOnly":{
          "$ref":"#/definitions/CountOnly"
        }
      }
    },
    "R2009":{
      "allOf":[
        {
          "$ref":"#/definitions/DictionaryDetails"
        },
        {
          "type":"object",
          "properties":{
            "created":{
              "type":"boolean",
              "format":"integer",
              "default":"1"
            },
            "matched":{
              "type":"boolean",
              "format":"integer"
            }
          }
        }
      ]
    },
    "RequestBody33":{
      "type":"object",
      "properties":{
        "name":{
          "description":"if provided, overrides the path parameter",
          "type":"string"
        },
        "description":{
          "type":"string"
        },
        "language":{
          "description":"default language for dictionary entries",
          "$ref":"#/definitions/LanguageCode"
        },
        "items":{
          "description":"list of items to add (don't supply id values)",
          "type":"array",
          "items":{
            "$ref":"#/definitions/DictionaryItemDetails"
          }
        },
        "match":{
          "description":"if set to true, the dictionary is immediately matched against the domain's sources",
          "type":"boolean",
          "format":"integer"
        },
        "filter":{
          "description":"if match=1, restricts the sources to be matched",
          "$ref":"#/definitions/Filter"
        }
      }
    },
    "RequestBody34":{
      "type":"object",
      "required":[
        "name"
      ],
      "properties":{
        "name":{
          "description":"name for the new dictionary",
          "type":"string"
        },
        "description":{
          "type":"string"
        },
        "language":{
          "description":"default language for dictionary entries",
          "$ref":"#/definitions/LanguageCode"
        },
        "items":{
          "description":"list of items to add (don't supply id values)",
          "type":"array",
          "items":{
            "$ref":"#/definitions/DictionaryItemDetails"
          }
        },
        "match":{
          "description":"if set to true, the dictionary is immediately matched against the domain's sources",
          "type":"boolean",
          "format":"integer"
        },
        "filter":{
          "description":"if match=1, restricts the sources to be matched",
          "$ref":"#/definitions/Filter"
        }
      }
    },
    "AddItemsResult":{
      "title":"AddItemsResult",
      "type":"object",
      "properties":{
        "dictionary":{
          "$ref":"#/definitions/DictionaryDetails2"
        },
        "items":{
          "type":"array",
          "items":{
            "allOf":[
              {
                "$ref":"#/definitions/DictionaryItemDetails"
              },
              {
                "type":"object",
                "properties":{
                  "error":{
                    "description":"the error message, if this item failed to get created",
                    "type":"string"
                  }
                }
              }
            ]
          }
        },
        "matched":{
          "type":"boolean",
          "format":"integer"
        }
      }
    },
    "RequestBody35":{
      "type":"object",
      "properties":{
        "dictionaryId":{
          "description":"if provided, overrides the path parameter",
          "type":"string"
        },
        "items":{
          "description":"list of items to add (don't supply id values)",
          "type":"array",
          "items":{
            "$ref":"#/definitions/DictionaryItemDetails"
          }
        },
        "match":{
          "description":"if set to true, the dictionary is immediately matched against the domain's sources",
          "type":"boolean",
          "format":"integer"
        },
        "filter":{
          "description":"if match=1, restricts the sources to be matched",
          "$ref":"#/definitions/Filter"
        }
      }
    },
    "RequestBody36":{
      "type":"object",
      "required":[
        "dictionaryId",
        "items"
      ],
      "properties":{
        "dictionaryId":{
          "description":"if provided, overrides the path parameter",
          "type":"string"
        },
        "items":{
          "description":"list of items to add (don't supply id values)",
          "type":"array",
          "items":{
            "$ref":"#/definitions/DictionaryItemDetails"
          }
        },
        "match":{
          "description":"if set to true, the dictionary is immediately matched against the domain's sources",
          "type":"boolean",
          "format":"integer"
        },
        "filter":{
          "description":"if match=1, restricts the sources to be matched",
          "$ref":"#/definitions/Filter"
        }
      }
    },
    "R20010":{
      "allOf":[
        {
          "$ref":"#/definitions/DictionaryItemDetails"
        },
        {
          "type":"object",
          "properties":{
            "dictionary":{
              "type":"object",
              "properties":{
                "id":{
                  "type":"integer"
                },
                "name":{
                  "type":"string"
                }
              }
            }
          }
        }
      ]
    },
    "AddTermsResult":{
      "title":"AddTermsResult",
      "type":"object",
      "properties":{
        "item":{
          "$ref":"#/definitions/DictionaryItemDetails2"
        },
        "terms":{
          "type":"array",
          "items":{
            "allOf":[
              {
                "$ref":"#/definitions/DictionaryTermDetails"
              },
              {
                "type":"object",
                "properties":{
                  "error":{
                    "description":"the error message, if this term failed to get created",
                    "type":"string"
                  }
                }
              }
            ]
          }
        },
        "matched":{
          "type":"boolean",
          "format":"integer"
        }
      }
    },
    "RequestBody37":{
      "type":"object",
      "properties":{
        "dictionaryItemId":{
          "description":"if provided, overrides the corresponding path parameter",
          "type":"string"
        },
        "terms":{
          "description":"list of terms to add (don't supply id values). An array of strings will be interpreted as simple terms.",
          "type":"array",
          "items":{
            "$ref":"#/definitions/DictionaryTermDetails"
          }
        },
        "match":{
          "description":"if set to true, the dictionary is immediately matched against the domain's sources",
          "type":"boolean",
          "format":"integer"
        },
        "filter":{
          "description":"if match=1, restricts the sources to be matched",
          "$ref":"#/definitions/Filter"
        }
      }
    },
    "RequestBody38":{
      "type":"object",
      "required":[
        "dictionaryItemId",
        "terms"
      ],
      "properties":{
        "dictionaryItemId":{
          "description":"if provided, overrides the corresponding path parameter",
          "type":"string"
        },
        "terms":{
          "description":"list of terms to add (don't supply id values). An array of strings will be interpreted as simple terms.",
          "type":"array",
          "items":{
            "$ref":"#/definitions/DictionaryTermDetails"
          }
        },
        "match":{
          "description":"if set to true, the dictionary is immediately matched against the domain's sources",
          "type":"boolean",
          "format":"integer"
        },
        "filter":{
          "description":"if match=1, restricts the sources to be matched",
          "$ref":"#/definitions/Filter"
        }
      }
    },
    "R20011":{
      "type":"object",
      "properties":{
        "matched":{
          "type":"boolean",
          "format":"integer",
          "default":"1"
        }
      }
    },
    "RequestBody39":{
      "type":"object",
      "properties":{
        "filter":{
          "$ref":"#/definitions/Filter",
          "description":"optionally limits the operation to those sources selected by this filter"
        },
        "dictionaries":{
          "description":"if set, limits the operation to these dictionary IDs",
          "default":[
          ],
          "type":"array",
          "items":{
            "type":"integer"
          }
        }
      }
    },
    "RequestBody40":{
      "type":"object",
      "properties":{
        "dictionaries":{
          "description":"if set, limits the operation to these dictionary IDs",
          "default":[
          ],
          "type":"array",
          "items":{
            "type":"integer"
          }
        }
      }
    },
    "RequestBody41":{
      "type":"object",
      "properties":{
        "page":{
          "$ref":"#/definitions/PageNumber"
        },
        "pageSize":{
          "$ref":"#/definitions/PageSize"
        },
        "matchFirst":{
          "description":"ensures this source is matched against the latest dictionaries before retrieving results",
          "type":"boolean",
          "format":"integer",
          "default":"1"
        },
        "dictionaries":{
          "description":"if set, limits results to these dictionary IDs",
          "default":[
          ],
          "type":"array",
          "items":{
            "type":"integer"
          }
        },
        "includeDictionaryDetails":{
          "description":"whether or not to retrieve dictionary details as well",
          "type":"boolean",
          "format":"integer",
          "default":"1"
        },
        "includeMatchDetails":{
          "description":"whether or not to retrieve entity-level match details as well",
          "type":"boolean",
          "format":"integer",
          "default":"0"
        },
        "includeSnippets":{
          "description":"whether or not to include the text of the matched sentence",
          "type":"boolean",
          "format":"integer",
          "default":"1"
        },
        "highlight":{
          "$ref":"#/definitions/Highlighting"
        }
      }
    },
    "RequestBody42":{
      "type":"object",
      "properties":{
        "page":{
          "$ref":"#/definitions/PageNumber"
        },
        "pageSize":{
          "$ref":"#/definitions/PageSize"
        },
        "filter":{
          "$ref":"#/definitions/Filter",
          "description":"optionally filters the results to those matches in sources selected by this filter"
        },
        "matchFirst":{
          "description":"ensures the domain is matched against the latest dictionaries before retrieving results",
          "type":"boolean",
          "format":"integer",
          "default":"1"
        },
        "includeDictionaryDetails":{
          "description":"whether or not to dictionary details as well",
          "type":"boolean",
          "format":"integer",
          "default":"1"
        },
        "includeMatchDetails":{
          "description":"whether or not to entity-level match details as well",
          "type":"boolean",
          "format":"integer",
          "default":"0"
        },
        "includeSnippets":{
          "description":"whether or not to include the text of the matched sentence",
          "type":"boolean",
          "format":"integer",
          "default":"1"
        },
        "highlight":{
          "$ref":"#/definitions/Highlighting"
        }
      }
    },
    "R20012":{
      "type":"object",
      "required":[
        "text"
      ],
      "properties":{
        "text":{
          "description":"the highlighted text",
          "type":"string"
        },
        "concepts":{
          "description":"list of concepts for this text",
          "type":"array",
          "items":{
            "$ref":"#/definitions/AnonymousDef2"
          }
        },
        "relations":{
          "description":"list of relations for this text",
          "type":"array",
          "items":{
            "$ref":"#/definitions/AnonymousDef2"
          }
        },
        "matches":{
          "description":"list of dictionary matches for this text",
          "type":"array",
          "items":{
            "$ref":"#/definitions/MatchListItem"
          }
        }
      }
    },
    "RequestBody43":{
      "type":"object",
      "required":[
        "highlight",
        "text"
      ],
      "properties":{
        "text":{
          "description":"the text to index",
          "example":"This text is in urgent need of fancy markup!",
          "type":"string"
        },
        "configuration":{
          "description":"name of a valid configuration object to use or the two-letter ISO code for the language to use (if no such configuration exists)",
          "type":"string",
          "example":"en"
        },
        "summarize":{
          "description":"if set to a nonzero value, the text returned will be a summary of the full contents, measuring this many sentences",
          "type":"number",
          "default":"0"
        },
        "highlight":{
          "description":"highlighting specification",
          "$ref":"#/definitions/Highlighting",
          "example":[
            " { role: \"concept\", style: \"[]\" }, { role: \"relation\", style: \"{}\" }"
          ]
        },
        "includeMatches":{
          "description":"whether or not to retrieve dictionary matches for the indexed record",
          "type":"boolean",
          "format":"integer",
          "default":"0"
        },
        "dictionaries":{
          "description":"if set, limits results to these dictionary IDs",
          "default":[
          ],
          "type":"array",
          "items":{
            "type":"integer"
          }
        },
        "includeDictionaryDetails":{
          "description":"whether or not to retrieve dictionary details as well",
          "type":"boolean",
          "format":"integer",
          "default":"1"
        },
        "includeMatchDetails":{
          "description":"whether or not to entity-level match details as well",
          "type":"boolean",
          "format":"integer",
          "default":"0"
        }
      }
    },
    "R20013":{
      "type":"object",
      "required":[
        "text"
      ],
      "properties":{
        "text":{
          "description":"the highlighted text",
          "type":"string"
        }
      }
    },
    "RequestBody44":{
      "type":"object",
      "required":[
        "highlight",
        "text"
      ],
      "properties":{
        "text":{
          "description":"the text to highlight",
          "example":"This text is in urgent need of fancy markup!",
          "type":"string"
        },
        "configuration":{
          "description":"name of a valid configuration object to use or the two-letter ISO code for the language to use (if no such configuration exists)",
          "type":"string",
          "example":"en"
        },
        "highlight":{
          "description":"highlighting specification",
          "$ref":"#/definitions/Highlighting",
          "example":[
            " { role: \"concept\", style: \"[]\" }, { role: \"relation\", style: \"{}\" }"
          ]
        }
      }
    },
    "RequestBody45":{
      "type":"object",
      "properties":{
        "includeUserDictionaryContents":{
          "type":"boolean",
          "description":"Whether or not to include user dictionary contents",
          "default":"false",
          "format":"integer"
        }
      }
    },
    "R20014":{
      "type":"object",
      "properties":{
        "rows":{
          "type":"array",
          "default":[
          ],
          "items":{
            "$ref":"#/definitions/AnonymousDef3"
          }
        }
      }
    },
    "RequestBody46":{
      "type":"object",
      "properties":{
        "query":{
          "description":"This is the only necessary parameter with no default value. The search terms to query against the iFind index.",
          "type":"string"
        },
        "index":{
          "description":"the iFind index would be searched against, if you don't specify it, the first found iFind index would be used .",
          "type":"string"
        },
        "option":{
          "$ref":"#/definitions/OptionSpec"
        },
        "distance":{
          "description":"only valid when option is fuzzy search (when option is 3)",
          "type":"string",
          "example":"3"
        },
        "language":{
          "description":"iKnow-supported language model to apply, for example \"en\"",
          "type":"string"
        },
        "includeText":{
          "description":"whether the returned columns should include the column beging indexed by 'index'",
          "type":"integer",
          "default":"0",
          "enum":[
            0,
            1
          ]
        },
        "columns":{
          "description":"specify the columns which also needed to be returned. For example, [\"column1\",\"column2\"]",
          "type":"array",
          "example":[
          ],
          "items":{
            "type":"string"
          }
        },
        "highlightSpec":{
          "$ref":"#/definitions/HighlightSpec",
          "description":"the parameters needed for Highlight"
        },
        "rankSpec":{
          "$ref":"#/definitions/RankSpec",
          "description":"the parameters needed for Rank"
        },
        "where":{
          "description":"the valid SQL logical condition statement. For example, \"column1 = ? AND column2 = ?\"",
          "type":"string"
        }
      }
    },
    "Domain":{
      "title":"Domain",
      "type":"object",
      "required":[
        "id",
        "name"
      ],
      "properties":{
        "id":{
          "type":"integer"
        },
        "name":{
          "type":"string"
        },
        "definitionClass":{
          "type":"string"
        },
        "sourceCount":{
          "type":"integer"
        },
        "version":{
          "type":"integer"
        }
      }
    },
    "AnonymousDef":{
      "type":"object",
      "required":[
        "id",
        "name",
        "operators",
        "dataType",
        "storage"
      ],
      "properties":{
        "id":{
          "type":"integer"
        },
        "name":{
          "type":"string"
        },
        "operators":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/MetadataOperator"
          }
        },
        "dataType":{
          "type":"string",
          "enum":[
            "string",
            "number",
            "date"
          ]
        },
        "storage":{
          "type":"string"
        }
      }
    },
    "Configuration":{
      "title":"Configuration",
      "type":"object",
      "required":[
        "id",
        "name",
        "languages"
      ],
      "properties":{
        "id":{
          "type":"integer"
        },
        "name":{
          "type":"string"
        },
        "languages":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/UserDictionary"
          }
        },
        "userDictionary":{
        },
        "maxConceptLength":{
          "type":"integer"
        }
      }
    },
    "UserDictionaryEntry":{
      "title":"UserDictionaryEntry",
      "type":"object",
      "required":[
        "string"
      ],
      "properties":{
        "string":{
          "type":"string"
        },
        "rewrite":{
          "type":"string"
        },
        "label":{
          "type":"string"
        }
      }
    },
    "Source2":{
      "title":"Source",
      "type":"object",
      "required":[
        "id",
        "extId"
      ],
      "properties":{
        "id":{
          "type":"integer",
          "description":"source ID"
        },
        "extId":{
          "type":"string",
          "description":"external ID"
        },
        "metadata":{
          "type":"object",
          "description":"map of metadata field values"
        },
        "snippet":{
          "type":"string",
          "description":"snippet (summary) of the retrieved source"
        }
      }
    },
    "CRC2":{
      "title":"CRC",
      "type":"object",
      "required":[
        "id",
        "relation",
        "frequency",
        "spread"
      ],
      "properties":{
        "id":{
          "type":"integer",
          "description":"unique entity ID"
        },
        "head":{
          "type":"string",
          "description":"entity value of the head concept"
        },
        "relation":{
          "type":"string",
          "description":"entity value of the relation"
        },
        "tail":{
          "type":"string",
          "description":"entity value of the tail concept"
        },
        "frequency":{
          "type":"integer",
          "description":"number of times the CRC occurs in the result set"
        },
        "spread":{
          "type":"integer",
          "description":"number of distinct sources the CRC occurs in in the result set"
        }
      }
    },
    "MatchedTerm":{
      "type":"object",
      "title":"MatchedTerm",
      "required":[
        "id",
        "item"
      ],
      "properties":{
        "id":{
          "type":"integer"
        },
        "string":{
          "type":"string"
        },
        "item":{
          "$ref":"#/definitions/MatchedItem"
        }
      }
    },
    "MatchTarget":{
      "title":"MatchTarget",
      "type":"object",
      "description":"the matched piece of the source text",
      "properties":{
        "id":{
          "type":"integer"
        },
        "type":{
          "type":"string",
          "enum":[
            "entity",
            "crc",
            "path",
            "sentence"
          ]
        }
      }
    },
    "MatchedElements":{
      "type":"object",
      "title":"MatchedElements",
      "required":[
        "partId",
        "literal",
        "score",
        "role",
        "matchedWords",
        "negated"
      ],
      "properties":{
        "partId":{
          "type":"integer",
          "description":"entity occurrence / part ID of the matched sentence part"
        },
        "literal":{
          "type":"string",
          "description":"literal string how this part appeared in the sentence"
        },
        "score":{
          "type":"number",
          "description":"entity-level score"
        },
        "role":{
          "type":"string",
          "enum":[
            "concept",
            "relation",
            "pathRelevant"
          ],
          "description":"role of this sentence part"
        },
        "matchedWords":{
          "type":"string",
          "description":"which words within the entity actually matched"
        },
        "negated":{
          "type":"boolean",
          "format":"integer",
          "description":"whether this sentence part is part of a negative context"
        },
        "entityId":{
          "type":"integer",
          "description":"entity ID, if this part corresponds to an entity"
        },
        "entity":{
          "type":"string",
          "description":"entity value, if this part corresponds to an entity"
        },
        "output":{
          "type":"string",
          "description":"format output, if this part corresponds to a matched format providing output"
        }
      }
    },
    "SentencePart":{
      "title":"SentencePart",
      "type":"object",
      "required":[
        "partId",
        "literal",
        "role"
      ],
      "properties":{
        "partId":{
          "description":"entity / part occurrence ID",
          "type":"integer"
        },
        "literal":{
          "description":"literal value of this part in the sentence",
          "type":"string"
        },
        "role":{
          "description":"role of this entity in the path",
          "type":"string",
          "enum":[
            "concept",
            "relation",
            "pathRelevant"
          ]
        },
        "entityId":{
          "description":"unique entity ID, if this is not a non-relevant",
          "type":"integer"
        },
        "entity":{
          "description":"entity value, if this is not a non-relevant",
          "type":"string"
        },
        "stemId":{
          "description":"stem ID for this entity, if the domain is configured for stemming",
          "type":"string"
        },
        "stem":{
          "description":"stem value of this entity, if the domain is configured for stemming",
          "type":"string"
        },
        "attributes":{
          "description":"semantic attributes for this entity",
          "type":"array",
          "items":{
            "$ref":"#/definitions/AttributeInfo"
          }
        }
      }
    },
    "Entity2":{
      "title":"Entity",
      "type":"object",
      "required":[
        "id",
        "value"
      ],
      "properties":{
        "id":{
          "type":"integer",
          "description":"unique entity ID"
        },
        "value":{
          "type":"string",
          "description":"entity value"
        },
        "frequency":{
          "type":"integer",
          "description":"number of times the entity occurs in the result set"
        },
        "spread":{
          "type":"integer",
          "description":"number of distinct sources the entity occurs in in the result set"
        },
        "dominance":{
          "type":"number",
          "description":"relevance of the entity in this result set"
        },
        "tfidf":{
          "type":"number",
          "description":"TFIDF-based metric expressing relevance of the entity in this result set"
        },
        "bm25":{
          "type":"number",
          "description":"BM25-based metric expressing relevance of the entity in this result set"
        }
      }
    },
    "metricsAsConceptAnonymous":{
      "type":"object",
      "properties":{
        "frequency":{
          "type":"integer",
          "description":"number of times the entity occurs in the result set"
        },
        "spread":{
          "type":"integer",
          "description":"number of distinct sources the entity occurs in in the result set"
        },
        "tfidf":{
          "type":"number",
          "description":"TFIDF-based metric expressing relevance of the entity in this result set"
        }
      }
    },
    "metricsAsRelationAnonymous":{
      "type":"object",
      "properties":{
        "frequency":{
          "type":"integer",
          "description":"number of times the entity occurs in the result set"
        },
        "spread":{
          "type":"integer",
          "description":"number of distinct sources the entity occurs in in the result set"
        },
        "tfidf":{
          "type":"number",
          "description":"TFIDF-based metric expressing relevance of the entity in this result set"
        }
      }
    },
    "metricsAsAnyAnonymous":{
      "type":"object",
      "properties":{
        "frequency":{
          "type":"integer",
          "description":"number of times the entity occurs in the result set"
        },
        "spread":{
          "type":"integer",
          "description":"number of distinct sources the entity occurs in in the result set"
        },
        "tfidf":{
          "type":"number",
          "description":"TFIDF-based metric expressing relevance of the entity in this result set"
        }
      }
    },
    "Path":{
      "title":"Path",
      "properties":{
        "id":{
          "description":"path ID",
          "type":"integer"
        },
        "entities":{
          "description":"entities in this path",
          "type":"array",
          "items":{
            "$ref":"#/definitions/PathEntity"
          }
        }
      },
      "type":"object"
    },
    "DictionaryDetails2":{
      "type":"object",
      "title":"DictionaryDetails",
      "description":"the dictionary these items were added to",
      "properties":{
        "id":{
          "type":"integer"
        },
        "name":{
          "type":"string"
        }
      }
    },
    "DictionaryItemDetails2":{
      "type":"object",
      "title":"DictionaryItemDetails",
      "description":"the dictionary item these terms were added to",
      "properties":{
        "id":{
          "type":"integer"
        },
        "name":{
          "type":"string"
        },
        "uri":{
          "type":"string"
        },
        "dictionary":{
          "$ref":"#/definitions/DictionaryDetails3"
        }
      }
    },
    "AnonymousDef2":{
      "type":"object",
      "properties":{
        "value":{
          "type":"string"
        },
        "frequency":{
          "type":"integer"
        },
        "dominance":{
          "type":"integer"
        }
      }
    },
    "AnonymousDef3":{
      "type":"object"
    },
    "MatchedItem":{
      "title":"MatchedItem",
      "type":"object",
      "required":[
        "id",
        "uri",
        "name",
        "dictionary"
      ],
      "properties":{
        "id":{
          "type":"integer"
        },
        "name":{
          "type":"string"
        },
        "uri":{
          "type":"string"
        },
        "dictionary":{
          "$ref":"#/definitions/MatchedDictionary"
        }
      }
    },
    "AttributeInfo":{
      "title":"AttributeInfo",
      "type":"object",
      "required":[
        "type",
        "level"
      ],
      "properties":{
        "type":{
          "description":"name of the attribute",
          "type":"string"
        },
        "level":{
          "description":"level at which the attribute applies",
          "type":"string",
          "enum":[
            "path",
            "word"
          ]
        },
        "words":{
          "description":"if level=\"word\", the actual words affected",
          "type":"string"
        },
        "properties":{
          "description":"attribute properties",
          "type":"object"
        }
      }
    },
    "PathEntity":{
      "title":"PathEntity",
      "type":"object",
      "required":[
        "id",
        "entity"
      ],
      "properties":{
        "id":{
          "description":"unique entity ID",
          "type":"integer"
        },
        "entity":{
          "description":"entity value",
          "type":"string"
        },
        "partId":{
          "description":"entity occurrence ID",
          "type":"integer"
        },
        "role":{
          "description":"role of this entity in the path",
          "type":"string",
          "enum":[
            "concept",
            "relation",
            "pathRelevant"
          ]
        },
        "stemId":{
          "description":"stem ID for this entity, if the domain is configured for stemming",
          "type":"integer"
        },
        "stem":{
          "description":"stem value of this entity, if the domain is configured for stemming",
          "type":"string"
        },
        "attributes":{
          "description":"semantic attributes for this entity",
          "type":"array",
          "items":{
            "$ref":"#/definitions/AttributeInfo"
          }
        }
      }
    },
    "DictionaryDetails3":{
      "type":"object",
      "title":"DictionaryDetails",
      "description":"the dictionary these terms were added to",
      "properties":{
        "id":{
          "type":"integer"
        },
        "name":{
          "type":"string"
        }
      }
    },
    "MatchedDictionary":{
      "title":"MatchedDictionary",
      "type":"object",
      "required":[
        "id",
        "name"
      ],
      "properties":{
        "id":{
          "type":"integer"
        },
        "name":{
          "type":"string"
        }
      }
    }
  },
  "host":"3A585E0DCB5D:52773",
  "basePath":"/api/iKnow/latest/USER",
  "paths":{
    "/domain/{domain}/entities":{
      "get":{
        "operationId":"DomainEntitiesGET",
        "summary":"Retrieves the top entities for this domain",
        "tags":[
          "Entities"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/EntityList2"
            }
          }
        }
      },
      "post":{
        "operationId":"DomainEntitiesPOST",
        "summary":"Retrieves the top entities for this domain",
        "tags":[
          "Entities"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "schema":{
              "$ref":"#/definitions/RequestBody"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/EntityList3"
            }
          }
        }
      }
    },
    "/domain/{domain}/entities/{string}/similar":{
      "get":{
        "operationId":"DomainEntitiesSimilarGET",
        "summary":"Retrieves entities similar to a seed string",
        "tags":[
          "Entities"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"string",
            "description":"the seed string to find similar entities for",
            "in":"path",
            "required":"true",
            "type":"string"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/EntityList"
            }
          }
        }
      },
      "post":{
        "operationId":"DomainEntitiesSimilarPOST",
        "summary":"Retrieves entities similar to a seed string",
        "tags":[
          "Entities"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"string",
            "description":"the seed string to find similar entities for",
            "in":"path",
            "required":"true",
            "type":"string"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "schema":{
              "$ref":"#/definitions/RequestBody2"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/EntityList"
            }
          }
        }
      }
    },
    "/domain/{domain}/entities/similar":{
      "post":{
        "operationId":"DomainEntitiesSimilarPOST2",
        "summary":"Retrieves entities similar to a seed string",
        "tags":[
          "Entities"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "required":"true",
            "schema":{
              "$ref":"#/definitions/RequestBody3"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/EntityList"
            }
          }
        }
      }
    },
    "/domain/{domain}/entities/{entity}/related":{
      "get":{
        "operationId":"DomainEntitiesRelatedGET",
        "summary":"Retrieves entities related to a seed entity based on proximity or direct relationships",
        "tags":[
          "Entities"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"entity",
            "description":"the seed entity to find related entities for",
            "in":"path",
            "required":"true",
            "type":"string"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/EntityList"
            }
          }
        }
      },
      "post":{
        "operationId":"DomainEntitiesRelatedPOST",
        "summary":"Retrieves entities related to a seed entity based on proximity or direct relationships",
        "tags":[
          "Entities"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"entity",
            "description":"the seed entity to find related entities for",
            "in":"path",
            "required":"true",
            "type":"string"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "schema":{
              "$ref":"#/definitions/RequestBody4"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/EntityList"
            }
          }
        }
      }
    },
    "/domain/{domain}/entities/related":{
      "post":{
        "operationId":"DomainEntitiesRelatedPOST2",
        "summary":"Retrieves entities related to a seed entity based on proximity or direct relationships",
        "tags":[
          "Entities"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "required":"true",
            "schema":{
              "$ref":"#/definitions/RequestBody5"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/EntityList"
            }
          }
        }
      }
    },
    "/domain/{domain}/entities/{entity}/details":{
      "get":{
        "operationId":"DomainEntitiesDetailsGET",
        "summary":"Retrieves details for the supplied entity",
        "tags":[
          "Entities"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"entity",
            "description":"the entity whose details need to be returned",
            "in":"path",
            "required":"true",
            "type":"string"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/EntityDetails"
            }
          }
        }
      },
      "post":{
        "operationId":"DomainEntitiesDetailsPOST",
        "summary":"Retrieves details for the supplied entity",
        "tags":[
          "Entities"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"entity",
            "description":"the entity whose details need to be returned",
            "in":"path",
            "required":"true",
            "type":"string"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "schema":{
              "$ref":"#/definitions/RequestBody6"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/EntityDetails"
            }
          }
        }
      }
    },
    "/domain/{domain}/entities/details":{
      "post":{
        "operationId":"DomainEntitiesDetailsPOST2",
        "summary":"Retrieves details for the supplied entity",
        "tags":[
          "Entities"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "required":"true",
            "schema":{
              "$ref":"#/definitions/RequestBody7"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/EntityDetails"
            }
          }
        }
      }
    },
    "/domain/{domain}/sources":{
      "get":{
        "operationId":"DomainSourcesGET",
        "summary":"Retrieves all sources matching the supplied filter",
        "tags":[
          "Sources"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/SourceList"
            }
          }
        }
      },
      "post":{
        "operationId":"DomainSourcesPOST",
        "summary":"Retrieves all sources matching the supplied filter",
        "tags":[
          "Sources"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "schema":{
              "$ref":"#/definitions/RequestBody8"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/SourceList"
            }
          }
        }
      }
    },
    "/domain/{domain}/sources/by/entity/{entity}":{
      "get":{
        "operationId":"DomainSourcesByEntityGET",
        "summary":"Retrieves all sources containing the supplied entity",
        "tags":[
          "Sources"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"entity",
            "in":"path",
            "description":"entity to look for.",
            "type":"string",
            "required":"true"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/SourceList"
            }
          }
        }
      },
      "post":{
        "operationId":"DomainSourcesByEntityPOST",
        "summary":"Retrieves all sources containing the supplied entity",
        "tags":[
          "Sources"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"entity",
            "in":"path",
            "description":"entity to look for. If supplied in the request object, that value will take precedence over the path parameter",
            "type":"string",
            "required":"true"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "schema":{
              "$ref":"#/definitions/RequestBody9"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/SourceList"
            }
          }
        }
      }
    },
    "/domain/{domain}/sources/by/entity":{
      "post":{
        "operationId":"DomainSourcesByEntityPOST2",
        "summary":"Retrieves all sources containing the supplied entity",
        "tags":[
          "Sources"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "required":"true",
            "schema":{
              "$ref":"#/definitions/RequestBody10"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/SourceList"
            }
          }
        }
      }
    },
    "/domain/{domain}/sources/by/crc/{crc}":{
      "get":{
        "operationId":"DomainSourcesByCrcGET",
        "summary":"Retrieves all sources containing the supplied CRC",
        "tags":[
          "Sources"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"crc",
            "in":"path",
            "description":"CRC to look for, as a colon-separated sequence of head, relation and tail.",
            "type":"string",
            "required":"true",
            "__comment":"#example: john:likes:bananas"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/SourceList"
            }
          }
        }
      },
      "post":{
        "operationId":"DomainSourcesByCrcPOST",
        "summary":"Retrieves all sources containing the supplied CRC",
        "tags":[
          "Sources"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"crc",
            "in":"path",
            "description":"CRC to look for, as a colon-separated sequence of head, relation and tail. If supplied in the request object, that value will take precedence over the path parameter",
            "type":"string",
            "required":"true",
            "__comment":"#example: john:likes:bananas"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "schema":{
              "$ref":"#/definitions/RequestBody11"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/SourceList"
            }
          }
        }
      }
    },
    "/domain/{domain}/sources/by/crc":{
      "post":{
        "operationId":"DomainSourcesByCrcPOST2",
        "summary":"Retrieves all sources containing the supplied CRC",
        "tags":[
          "Sources"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "required":"true",
            "schema":{
              "$ref":"#/definitions/RequestBody12"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/SourceList"
            }
          }
        }
      }
    },
    "/domain/{domain}/sources/{source}/similar":{
      "get":{
        "operationId":"DomainSourcesSimilarGET",
        "summary":"Retrieves all sources similar to a seed source",
        "tags":[
          "Sources"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "$ref":"#/parameters/sourceParam"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/R200"
            }
          }
        }
      },
      "post":{
        "operationId":"DomainSourcesSimilarPOST",
        "summary":"Retrieves all sources similar to a seed source",
        "tags":[
          "Sources"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "$ref":"#/parameters/sourceParam"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "schema":{
              "$ref":"#/definitions/RequestBody13"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/R200"
            }
          }
        }
      }
    },
    "/domain/{domain}/sources/{source}/details":{
      "get":{
        "operationId":"DomainSourcesDetailsGET",
        "summary":"Retrieves the details of a particular source",
        "tags":[
          "Sources"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "$ref":"#/parameters/sourceParam"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/Source"
            }
          }
        }
      },
      "post":{
        "operationId":"DomainSourcesDetailsPOST",
        "summary":"Retrieves the details of a particular source",
        "tags":[
          "Sources"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "$ref":"#/parameters/sourceParam"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "schema":{
              "$ref":"#/definitions/RequestBody14"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/Source"
            }
          }
        }
      }
    },
    "/domain/{domain}/sources/new":{
      "post":{
        "operationId":"DomainSourcesNewPOST",
        "summary":"Adds a source to the domain",
        "tags":[
          "Sources"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "schema":{
              "$ref":"#/definitions/RequestBody15"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/R2002"
            }
          }
        }
      }
    },
    "/domain/{domain}/sources/{source}/drop":{
      "get":{
        "operationId":"DomainSourcesDropGET",
        "summary":"Deletes a source from the domain",
        "tags":[
          "Sources"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"source",
            "description":"the source ID to drop",
            "in":"path",
            "required":"true",
            "type":"integer"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/R2003"
            }
          }
        }
      },
      "post":{
        "operationId":"DomainSourcesDropPOST",
        "summary":"Deletes a source from the domain",
        "tags":[
          "Sources"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"source",
            "description":"the source ID to drop",
            "in":"path",
            "required":"true",
            "type":"integer"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "schema":{
              "$ref":"#/definitions/RequestBody16"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/R2003"
            }
          }
        }
      }
    },
    "/domain/{domain}/sources/{source}":{
      "delete":{
        "operationId":"DomainSourcesDELETE",
        "summary":"Deletes a source from the domain",
        "tags":[
          "Sources"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"source",
            "description":"the source ID to drop",
            "in":"path",
            "required":"true",
            "type":"integer"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/R2003"
            }
          }
        }
      }
    },
    "/domain/{domain}/sources/{source}/set/metadata":{
      "post":{
        "operationId":"DomainSourcesSetMetadataPOST",
        "summary":"Registers metadata values for a given source",
        "tags":[
          "Sources"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"source",
            "description":"the source ID whose metadata needs updating",
            "in":"path",
            "required":"true",
            "type":"integer"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "schema":{
              "$ref":"#/definitions/RequestBody17"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/R2004"
            }
          }
        }
      }
    },
    "/domain/{domain}/sentences/by/entity/{entity}":{
      "get":{
        "operationId":"DomainSentencesByEntityGET",
        "summary":"Retrieves the sentences containing a given entity",
        "tags":[
          "Sentences"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"entity",
            "description":"the entity to query for",
            "in":"path",
            "required":"true",
            "type":"string"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/SentenceList"
            }
          }
        }
      },
      "post":{
        "operationId":"DomainSentencesByEntityPOST",
        "summary":"Retrieves the sentences containing a given entity",
        "tags":[
          "Sentences"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"entity",
            "description":"the entity to query for",
            "in":"path",
            "required":"true",
            "type":"string"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "schema":{
              "$ref":"#/definitions/RequestBody18"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/SentenceList2"
            }
          }
        }
      }
    },
    "/domain/{domain}/sentences/by/entity":{
      "post":{
        "operationId":"DomainSentencesByEntityPOST2",
        "summary":"Retrieves the sentences containing a given entity",
        "tags":[
          "Sentences"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "required":"true",
            "schema":{
              "$ref":"#/definitions/RequestBody19"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/SentenceList2"
            }
          }
        }
      }
    },
    "/domain/{domain}/sentences/{id}/details":{
      "get":{
        "operationId":"DomainSentencesDetailsGET",
        "summary":"Retrieves the details for a particular sentence",
        "tags":[
          "Sentences"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"id",
            "description":"the sentence ID to query for",
            "in":"path",
            "required":"true",
            "type":"integer"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/SentenceDetails"
            }
          }
        }
      },
      "post":{
        "operationId":"DomainSentencesDetailsPOST",
        "summary":"Retrieves the details for a particular sentence",
        "tags":[
          "Sentences"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"id",
            "description":"the sentence ID to query for",
            "in":"path",
            "required":"true",
            "type":"integer"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "schema":{
              "$ref":"#/definitions/RequestBody20"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/SentenceDetails"
            }
          }
        }
      }
    },
    "/domain/{domain}/crcs":{
      "get":{
        "operationId":"DomainCrcsGET",
        "summary":"Retrieves the top CRCs for this domain",
        "tags":[
          "Paths and CRCs"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/CRCList"
            }
          }
        }
      },
      "post":{
        "operationId":"DomainCrcsPOST",
        "summary":"Retrieves the top CRCs for this domain",
        "tags":[
          "Paths and CRCs"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "schema":{
              "$ref":"#/definitions/RequestBody21"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/CRCList"
            }
          }
        }
      }
    },
    "/domain/{domain}/crcs/by/entity/{entity}":{
      "get":{
        "operationId":"DomainCrcsByEntityGET",
        "summary":"Retrieves the CRCs containing a designated entity",
        "tags":[
          "Paths and CRCs"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"entity",
            "description":"the entity to query for",
            "in":"path",
            "required":"true",
            "type":"string"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/CRCList"
            }
          }
        }
      },
      "post":{
        "operationId":"DomainCrcsByEntityPOST",
        "summary":"Retrieves the CRCs containing a designated entity",
        "tags":[
          "Paths and CRCs"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"entity",
            "description":"the entity to query for",
            "in":"path",
            "required":"true",
            "type":"string"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "schema":{
              "$ref":"#/definitions/RequestBody22"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/CRCList"
            }
          }
        }
      }
    },
    "/domain/{domain}/crcs/by/entity":{
      "post":{
        "operationId":"DomainCrcsByEntityPOST2",
        "summary":"Retrieves the CRCs containing a designated entity",
        "tags":[
          "Paths and CRCs"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "required":"true",
            "schema":{
              "$ref":"#/definitions/RequestBody23"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/CRCList"
            }
          }
        }
      }
    },
    "/domain/{domain}/paths/by/entity/{entity}":{
      "get":{
        "operationId":"DomainPathsByEntityGET",
        "summary":"Retrieves the paths containing a designated entity",
        "tags":[
          "Paths and CRCs"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"entity",
            "description":"the entity to query for",
            "in":"path",
            "required":"true",
            "type":"string"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/PathList"
            }
          }
        }
      },
      "post":{
        "operationId":"DomainPathsByEntityPOST",
        "summary":"Retrieves the paths containing a designated entity",
        "tags":[
          "Paths and CRCs"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"entity",
            "description":"the entity to query for",
            "in":"path",
            "required":"true",
            "type":"string"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "schema":{
              "$ref":"#/definitions/RequestBody24"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/PathList2"
            }
          }
        }
      }
    },
    "/domain/{domain}/paths/by/entity":{
      "post":{
        "operationId":"DomainPathsByEntityPOST2",
        "summary":"Retrieves the paths containing a designated entity",
        "tags":[
          "Paths and CRCs"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "required":"true",
            "schema":{
              "$ref":"#/definitions/RequestBody25"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/PathList2"
            }
          }
        }
      }
    },
    "/domain/{domain}/skiplists":{
      "get":{
        "operationId":"DomainSkiplistsGET",
        "summary":"Retrieves a list of available skiplists",
        "tags":[
          "Skiplists"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/SkiplistList"
            }
          }
        }
      },
      "post":{
        "operationId":"DomainSkiplistsPOST",
        "summary":"Retrieves a list of available skiplists",
        "tags":[
          "Skiplists"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "schema":{
              "$ref":"#/definitions/RequestBody26"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/SkiplistList"
            }
          }
        }
      }
    },
    "/domain/{domain}/skiplists/new/{name}":{
      "get":{
        "operationId":"DomainSkiplistsNewGET",
        "summary":"Creates a new skiplist",
        "tags":[
          "Skiplists"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"name",
            "in":"path",
            "description":"name of the new skiplist",
            "required":"true",
            "type":"string"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/SkiplistDetails"
            }
          }
        }
      },
      "post":{
        "operationId":"DomainSkiplistsNewPOST",
        "summary":"Creates a new skiplist",
        "tags":[
          "Skiplists"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"name",
            "in":"path",
            "description":"name of the new skiplist",
            "required":"true",
            "type":"string"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "schema":{
              "$ref":"#/definitions/RequestBody27"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/SkiplistDetails"
            }
          }
        }
      }
    },
    "/domain/{domain}/skiplists/new":{
      "post":{
        "operationId":"DomainSkiplistsNewPOST2",
        "summary":"Creates a new skiplist",
        "tags":[
          "Skiplists"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "required":"true",
            "schema":{
              "$ref":"#/definitions/RequestBody28"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/SkiplistDetails"
            }
          }
        }
      }
    },
    "/domain/{domain}/skiplists/{id}/details":{
      "get":{
        "operationId":"DomainSkiplistsDetailsGET",
        "summary":"Retrieves a particular skiplist's contents",
        "tags":[
          "Skiplists"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"id",
            "in":"path",
            "type":"integer",
            "description":"ID of the skiplist being queried",
            "required":"true"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/SkiplistDetails"
            }
          }
        }
      },
      "post":{
        "operationId":"DomainSkiplistsDetailsPOST",
        "summary":"Retrieves a particular skiplist's contents",
        "tags":[
          "Skiplists"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"id",
            "in":"path",
            "type":"integer",
            "description":"ID of the skiplist being queried",
            "required":"true"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/SkiplistDetails"
            }
          }
        }
      }
    },
    "/domain/{domain}/skiplists/{id}/drop":{
      "get":{
        "operationId":"DomainSkiplistsDropGET",
        "summary":"Drops a given skiplist",
        "tags":[
          "Skiplists"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"id",
            "in":"path",
            "type":"string",
            "description":"ID of the skiplist to drop",
            "required":"true"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/R2005"
            }
          }
        }
      },
      "post":{
        "operationId":"DomainSkiplistsDropPOST",
        "summary":"Drops a given skiplist",
        "tags":[
          "Skiplists"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"id",
            "in":"path",
            "type":"string",
            "description":"ID of the skiplist to drop",
            "required":"true"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/R2005"
            }
          }
        }
      }
    },
    "/domain/{domain}/skiplists/{id}":{
      "delete":{
        "operationId":"DomainSkiplistsDELETE",
        "summary":"Drops a given skiplist",
        "tags":[
          "Skiplists"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"id",
            "in":"path",
            "type":"string",
            "description":"ID of the skiplist to drop",
            "required":"true"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/R2005"
            }
          }
        }
      }
    },
    "/domain/{domain}/skiplists/{id}/clear":{
      "get":{
        "operationId":"DomainSkiplistsClearGET",
        "summary":"Clears all entries for a given skiplist",
        "tags":[
          "Skiplists"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"id",
            "in":"path",
            "type":"string",
            "description":"ID of the skiplist to clear",
            "required":"true"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/R2006"
            }
          }
        }
      },
      "post":{
        "operationId":"DomainSkiplistsClearPOST",
        "summary":"Clears all entries for a given skiplist",
        "tags":[
          "Skiplists"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"id",
            "in":"path",
            "type":"string",
            "description":"ID of the skiplist to clear",
            "required":"true"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/R2006"
            }
          }
        }
      }
    },
    "/domain/{domain}/skiplists/{id}/add/{string}":{
      "get":{
        "operationId":"DomainSkiplistsAddGET",
        "summary":"Adds new elements to a given skiplist",
        "tags":[
          "Skiplists"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"id",
            "in":"path",
            "type":"string",
            "description":"ID of the skiplist to extend",
            "required":"true"
          },
          {
            "name":"string",
            "in":"path",
            "type":"string",
            "description":"element to add to the skiplist",
            "required":"true"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/R2007"
            }
          }
        }
      },
      "post":{
        "operationId":"DomainSkiplistsAddPOST",
        "summary":"Adds new elements to a given skiplist",
        "tags":[
          "Skiplists"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"id",
            "in":"path",
            "type":"string",
            "description":"ID of the skiplist to extend",
            "required":"true"
          },
          {
            "name":"string",
            "in":"path",
            "type":"string",
            "description":"element to add to the skiplist",
            "required":"true"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "schema":{
              "$ref":"#/definitions/RequestBody29"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/R2007"
            }
          }
        }
      }
    },
    "/domain/{domain}/skiplists/{id}/add":{
      "post":{
        "operationId":"DomainSkiplistsAddPOST2",
        "summary":"Adds new elements to a given skiplist",
        "tags":[
          "Skiplists"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"id",
            "in":"path",
            "type":"string",
            "description":"ID of the skiplist to extend",
            "required":"true"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "required":"true",
            "schema":{
              "$ref":"#/definitions/RequestBody30"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/R2007"
            }
          }
        }
      }
    },
    "/domain/{domain}/skiplists/{id}/remove/{string}":{
      "get":{
        "operationId":"DomainSkiplistsRemoveGET",
        "summary":"Removes elements from a given skiplist",
        "tags":[
          "Skiplists"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"id",
            "in":"path",
            "type":"string",
            "description":"ID of the skiplist to modify",
            "required":"true"
          },
          {
            "name":"string",
            "in":"path",
            "type":"string",
            "description":"element to remove from the skiplist",
            "required":"true"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/R2008"
            }
          }
        }
      },
      "post":{
        "operationId":"DomainSkiplistsRemovePOST",
        "summary":"Removes elements from a given skiplist",
        "tags":[
          "Skiplists"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"id",
            "in":"path",
            "type":"string",
            "description":"ID of the skiplist to modify",
            "required":"true"
          },
          {
            "name":"string",
            "in":"path",
            "type":"string",
            "description":"element to remove from the skiplist",
            "required":"true"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "schema":{
              "$ref":"#/definitions/RequestBody29"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/R2008"
            }
          }
        }
      }
    },
    "/domain/{domain}/skiplists/{id}/remove":{
      "post":{
        "operationId":"DomainSkiplistsRemovePOST2",
        "summary":"Removes elements from a given skiplist",
        "tags":[
          "Skiplists"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"id",
            "in":"path",
            "type":"string",
            "description":"ID of the skiplist to modify",
            "required":"true"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "required":"true",
            "schema":{
              "$ref":"#/definitions/RequestBody31"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/R2008"
            }
          }
        }
      }
    },
    "/domain/{domain}/matching/dictionaries":{
      "get":{
        "operationId":"DomainMatchingDictionariesGET",
        "summary":"Retrieves a list of available dictionaries",
        "tags":[
          "Dictionaries and Matching"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/DictionaryList"
            }
          }
        }
      },
      "post":{
        "operationId":"DomainMatchingDictionariesPOST",
        "summary":"Retrieves a list of available dictionaries",
        "tags":[
          "Dictionaries and Matching"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "schema":{
              "$ref":"#/definitions/RequestBody32"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/DictionaryList"
            }
          }
        }
      }
    },
    "/domain/{domain}/matching/dictionaries/new/{name}":{
      "get":{
        "operationId":"DomainMatchingDictionariesNewGET",
        "summary":"Create a new dictionary",
        "tags":[
          "Dictionaries and Matching"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"name",
            "description":"name for the new dictionary",
            "in":"path",
            "type":"string",
            "required":"true"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/R2009"
            }
          }
        }
      },
      "post":{
        "operationId":"DomainMatchingDictionariesNewPOST",
        "summary":"Create a new dictionary",
        "tags":[
          "Dictionaries and Matching"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"name",
            "description":"name for the new dictionary",
            "in":"path",
            "type":"string",
            "required":"true"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "schema":{
              "$ref":"#/definitions/RequestBody33"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/R2009"
            }
          }
        }
      }
    },
    "/domain/{domain}/matching/dictionaries/new":{
      "post":{
        "operationId":"DomainMatchingDictionariesNewPOST2",
        "summary":"Create a new dictionary",
        "tags":[
          "Dictionaries and Matching"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "required":"true",
            "schema":{
              "$ref":"#/definitions/RequestBody34"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/R2009"
            }
          }
        }
      }
    },
    "/domain/{domain}/matching/dictionaries/{id}/details":{
      "get":{
        "operationId":"DomainMatchingDictionariesDetailsGET",
        "summary":"Retrieves the detailed contents for a given Dictionary",
        "tags":[
          "Dictionaries and Matching"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"id",
            "description":"ID of the dictionary to retrieve",
            "in":"path",
            "type":"integer",
            "required":"true"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/DictionaryDetails"
            }
          }
        }
      },
      "post":{
        "operationId":"DomainMatchingDictionariesDetailsPOST",
        "summary":"Retrieves the detailed contents for a given Dictionary",
        "tags":[
          "Dictionaries and Matching"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"id",
            "description":"ID of the dictionary to retrieve",
            "in":"path",
            "type":"integer",
            "required":"true"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/DictionaryDetails"
            }
          }
        }
      }
    },
    "/domain/{domain}/matching/dictionaries/{id}/drop":{
      "get":{
        "operationId":"DomainMatchingDictionariesDropGET",
        "summary":"Drops a dictionary",
        "tags":[
          "Dictionaries and Matching"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"id",
            "description":"ID of the dictionary to drop",
            "in":"path",
            "type":"integer",
            "required":"true"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/R2005"
            }
          }
        }
      },
      "post":{
        "operationId":"DomainMatchingDictionariesDropPOST",
        "summary":"Drops a dictionary",
        "tags":[
          "Dictionaries and Matching"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"id",
            "description":"ID of the dictionary to drop",
            "in":"path",
            "type":"integer",
            "required":"true"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/R2005"
            }
          }
        }
      }
    },
    "/domain/{domain}/matching/dictionaries/{id}":{
      "delete":{
        "operationId":"DomainMatchingDictionariesDELETE",
        "summary":"Drops a dictionary",
        "tags":[
          "Dictionaries and Matching"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"id",
            "description":"ID of the dictionary to drop",
            "in":"path",
            "type":"integer",
            "required":"true"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/R2005"
            }
          }
        }
      }
    },
    "/domain/{domain}/matching/dictionaries/{id}/add/items":{
      "post":{
        "operationId":"DomainMatchingDictionariesAddItemsPOST",
        "summary":"Create new dictionary items",
        "tags":[
          "Dictionaries and Matching"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"id",
            "description":"ID of the dictionary to which to add the new item",
            "in":"path",
            "type":"string",
            "required":"true"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "required":"true",
            "schema":{
              "$ref":"#/definitions/RequestBody35"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/AddItemsResult"
            }
          }
        }
      }
    },
    "/domain/{domain}/matching/items/new":{
      "post":{
        "operationId":"DomainMatchingItemsNewPOST",
        "summary":"Create new dictionary items",
        "tags":[
          "Dictionaries and Matching"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "required":"true",
            "schema":{
              "$ref":"#/definitions/RequestBody36"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/AddItemsResult"
            }
          }
        }
      }
    },
    "/domain/{domain}/matching/items/{id}/details":{
      "get":{
        "operationId":"DomainMatchingItemsDetailsGET",
        "summary":"Retrieves the detailed contents for a given Dictionary Item",
        "tags":[
          "Dictionaries and Matching"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"id",
            "description":"ID or URI of the dictionary item to retrieve",
            "in":"path",
            "type":"integer",
            "required":"true"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/R20010"
            }
          }
        }
      },
      "post":{
        "operationId":"DomainMatchingItemsDetailsPOST",
        "summary":"Retrieves the detailed contents for a given Dictionary Item",
        "tags":[
          "Dictionaries and Matching"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"id",
            "description":"ID or URI of the dictionary item to retrieve",
            "in":"path",
            "type":"integer",
            "required":"true"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/R20010"
            }
          }
        }
      }
    },
    "/domain/{domain}/matching/items/{id}/drop":{
      "get":{
        "operationId":"DomainMatchingItemsDropGET",
        "summary":"Drops a dictionary item",
        "tags":[
          "Dictionaries and Matching"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"id",
            "description":"ID or URI of the dictionary item to drop",
            "in":"path",
            "type":"integer",
            "required":"true"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/R2005"
            }
          }
        }
      },
      "post":{
        "operationId":"DomainMatchingItemsDropPOST",
        "summary":"Drops a dictionary item",
        "tags":[
          "Dictionaries and Matching"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"id",
            "description":"ID or URI of the dictionary item to drop",
            "in":"path",
            "type":"integer",
            "required":"true"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/R2005"
            }
          }
        }
      }
    },
    "/domain/{domain}/matching/items/{id}":{
      "delete":{
        "operationId":"DomainMatchingItemsDELETE",
        "summary":"Drops a dictionary item",
        "tags":[
          "Dictionaries and Matching"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"id",
            "description":"ID or URI of the dictionary item to drop",
            "in":"path",
            "type":"integer",
            "required":"true"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/R2005"
            }
          }
        }
      }
    },
    "/domain/{domain}/matching/items/{id}/add/terms":{
      "post":{
        "operationId":"DomainMatchingItemsAddTermsPOST",
        "summary":"Create new dictionary terms",
        "tags":[
          "Dictionaries and Matching"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"id",
            "description":"ID or URI of the dictionary item to which to add the new terms",
            "in":"path",
            "type":"string",
            "required":"true"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "required":"true",
            "schema":{
              "$ref":"#/definitions/RequestBody37"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/AddTermsResult"
            }
          }
        }
      }
    },
    "/domain/{domain}/matching/terms/new":{
      "post":{
        "operationId":"DomainMatchingTermsNewPOST",
        "summary":"Create new dictionary terms",
        "tags":[
          "Dictionaries and Matching"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "required":"true",
            "schema":{
              "$ref":"#/definitions/RequestBody38"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/AddTermsResult"
            }
          }
        }
      }
    },
    "/domain/{domain}/matching/terms/{id}/drop":{
      "get":{
        "operationId":"DomainMatchingTermsDropGET",
        "summary":"Drops a dictionary term",
        "tags":[
          "Dictionaries and Matching"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"id",
            "description":"ID of the dictionary term to drop",
            "in":"path",
            "type":"integer",
            "required":"true"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/R2005"
            }
          }
        }
      },
      "post":{
        "operationId":"DomainMatchingTermsDropPOST",
        "summary":"Drops a dictionary term",
        "tags":[
          "Dictionaries and Matching"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"id",
            "description":"ID of the dictionary term to drop",
            "in":"path",
            "type":"integer",
            "required":"true"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/R2005"
            }
          }
        }
      }
    },
    "/domain/{domain}/matching/terms/{id}":{
      "delete":{
        "operationId":"DomainMatchingTermsDELETE",
        "summary":"Drops a dictionary term",
        "tags":[
          "Dictionaries and Matching"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"id",
            "description":"ID of the dictionary term to drop",
            "in":"path",
            "type":"integer",
            "required":"true"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/R2005"
            }
          }
        }
      }
    },
    "/domain/{domain}/matching/match":{
      "get":{
        "operationId":"DomainMatchingMatchGET",
        "summary":"Matches all sources against the current dictionary contents",
        "tags":[
          "Dictionaries and Matching"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/R20011"
            }
          }
        }
      },
      "post":{
        "operationId":"DomainMatchingMatchPOST",
        "summary":"Matches all sources against the current dictionary contents",
        "tags":[
          "Dictionaries and Matching"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "schema":{
              "$ref":"#/definitions/RequestBody39"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/R20011"
            }
          }
        }
      }
    },
    "/domain/{domain}/matching/match/{source}":{
      "get":{
        "operationId":"DomainMatchingMatchGET2",
        "summary":"Matches a particular source against the current dictionary contents",
        "tags":[
          "Dictionaries and Matching"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "$ref":"#/parameters/sourceParam"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/R20011"
            }
          }
        }
      },
      "post":{
        "operationId":"DomainMatchingMatchPOST2",
        "summary":"Matches a particular source against the current dictionary contents",
        "tags":[
          "Dictionaries and Matching"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "$ref":"#/parameters/sourceParam"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "schema":{
              "$ref":"#/definitions/RequestBody40"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/R20011"
            }
          }
        }
      }
    },
    "/domain/{domain}/matching/matches/by/source/{id}":{
      "get":{
        "operationId":"DomainMatchingMatchesBySourceGET",
        "summary":"Retrieves all dictionary matches for a given source",
        "tags":[
          "Dictionaries and Matching"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"id",
            "description":"the source ID to query for",
            "in":"path",
            "required":"true",
            "type":"integer"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/MatchList"
            }
          }
        }
      },
      "post":{
        "operationId":"DomainMatchingMatchesBySourcePOST",
        "summary":"Retrieves all dictionary matches for a given source",
        "tags":[
          "Dictionaries and Matching"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"id",
            "description":"the source ID to query for",
            "in":"path",
            "required":"true",
            "type":"integer"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "schema":{
              "$ref":"#/definitions/RequestBody41"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/MatchList"
            }
          }
        }
      }
    },
    "/domain/{domain}/matching/matches/by/item/{id}":{
      "get":{
        "operationId":"DomainMatchingMatchesByItemGET",
        "summary":"Retrieves all dictionary matches for a dictionary item",
        "tags":[
          "Dictionaries and Matching"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"id",
            "description":"the dictionary item ID or URI to query for",
            "in":"path",
            "required":"true",
            "type":"integer"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/MatchList"
            }
          }
        }
      },
      "post":{
        "operationId":"DomainMatchingMatchesByItemPOST",
        "summary":"Retrieves all dictionary matches for a dictionary item",
        "tags":[
          "Dictionaries and Matching"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"id",
            "description":"the dictionary item ID or URI to query for",
            "in":"path",
            "required":"true",
            "type":"integer"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "schema":{
              "$ref":"#/definitions/RequestBody42"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/MatchList"
            }
          }
        }
      }
    },
    "/index":{
      "post":{
        "operationId":"IndexPOST",
        "summary":"Indexes the supplied text and returns concepts, relations and CRCs",
        "tags":[
          "Miscellaneous"
        ],
        "parameters":[
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "schema":{
              "$ref":"#/definitions/RequestBody43"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/R20012"
            }
          }
        }
      }
    },
    "/domain/{domain}/index":{
      "post":{
        "operationId":"DomainIndexPOST",
        "summary":"Indexes the supplied text and returns concepts, relations and CRCs",
        "tags":[
          "Miscellaneous"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "schema":{
              "$ref":"#/definitions/RequestBody43"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/R20012"
            }
          }
        }
      }
    },
    "/highlight":{
      "post":{
        "operationId":"HighlightPOST",
        "summary":"Highlights the supplied text",
        "tags":[
          "Miscellaneous"
        ],
        "parameters":[
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "schema":{
              "$ref":"#/definitions/RequestBody44"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/R20013"
            }
          }
        }
      }
    },
    "/domain/{domain}/highlight":{
      "post":{
        "operationId":"DomainHighlightPOST",
        "summary":"Highlights the supplied text",
        "tags":[
          "Miscellaneous"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "schema":{
              "$ref":"#/definitions/RequestBody44"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/R20013"
            }
          }
        }
      }
    },
    "/domains":{
      "get":{
        "operationId":"DomainsGET",
        "summary":"Retrieves all the domains for this namespace, with basic info",
        "tags":[
          "Miscellaneous"
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/DomainList"
            }
          }
        }
      },
      "post":{
        "operationId":"DomainsPOST",
        "summary":"Retrieves all the domains for this namespace, with basic info",
        "tags":[
          "Miscellaneous"
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/DomainList"
            }
          }
        }
      }
    },
    "/configurations":{
      "get":{
        "operationId":"ConfigurationsGET",
        "summary":"Retrieves all the configurations for this namespace, with basic info",
        "tags":[
          "Miscellaneous"
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/ConfigurationList"
            }
          }
        }
      },
      "post":{
        "operationId":"ConfigurationsPOST",
        "summary":"Retrieves all the configurations for this namespace, with basic info",
        "tags":[
          "Miscellaneous"
        ],
        "parameters":[
          {
            "name":"RequestBody",
            "description":"additional parameters to configure this query",
            "in":"body",
            "required":"false",
            "schema":{
              "$ref":"#/definitions/RequestBody45"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/ConfigurationList"
            }
          }
        }
      }
    },
    "/domain/{domain}/details":{
      "get":{
        "operationId":"DomainDetailsGET",
        "summary":"Retrieve more detailed information about an individual domain",
        "tags":[
          "Miscellaneous"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/DomainDetails"
            }
          }
        }
      },
      "post":{
        "operationId":"DomainDetailsPOST",
        "summary":"Retrieve more detailed information about an individual domain",
        "tags":[
          "Miscellaneous"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/domainParam"
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/DomainDetails"
            }
          }
        }
      }
    },
    "/swagger":{
      "get":{
        "operationId":"SwaggerGET",
        "description":"Simple endpoint to print this Swagger definition in YAML",
        "summary":"Retrieves Swagger definition in YAML",
        "produces":[
          "application/x-yaml"
        ],
        "responses":{
          "200":{
            "description":"successful response"
          }
        }
      }
    },
    "/table/{table}/search":{
      "post":{
        "operationId":"TableSearchPOST",
        "summary":"Search the given iFind index in the given table",
        "tags":[
          "iFind"
        ],
        "parameters":[
          {
            "$ref":"#/parameters/tableParam"
          },
          {
            "name":"RequestBody",
            "description":"JSON object with a list of query-specific arguments",
            "in":"body",
            "schema":{
              "$ref":"#/definitions/RequestBody46"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "$ref":"#/definitions/R20014"
            }
          }
        }
      }
    }
  }
}